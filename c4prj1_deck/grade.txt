Grading at Thu Mar  5 02:39:51 UTC 2020
Compiling deck.c -> deck.o
Compiling eval.c -> eval.o
Compiling cards.c -> cards.o
Linking eval.o, deck.o, cards.o, and our tester
Testing free_deck(deck_t *)
- Test passed
Testing add_card_to(deck_t *, card_t)
timeout: the monitored command dumped core
Valgrind reported errors:
==1604== Memcheck, a memory error detector
==1604== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1604== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1604== Command: ./tester act
==1604== Parent PID: 1603
==1604== 
==1604== Use of uninitialised value of size 8
==1604==    at 0x40205B: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1604==    by 0x4040A2: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1604==    by 0x400B08: main (in /graderhome/work/c4prj1_deck/tester)
==1604== 
==1604== Invalid write of size 4
==1604==    at 0x40205B: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1604==    by 0x4040A2: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1604==    by 0x400B08: main (in /graderhome/work/c4prj1_deck/tester)
==1604==  Address 0x4 is not stack'd, malloc'd or (recently) free'd
==1604== 
==1604== 
==1604== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1604==  Access not within mapped region at address 0x4
==1604==    at 0x40205B: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1604==    by 0x4040A2: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1604==    by 0x400B08: main (in /graderhome/work/c4prj1_deck/tester)
==1604==  If you believe this happened as a result of a stack
==1604==  overflow in your program's main thread (unlikely but
==1604==  possible), you can try to increase the size of the
==1604==  main thread stack using the --main-stacksize= flag.
==1604==  The main thread stack size used in this run was 8388608.
==1604== 
==1604== HEAP SUMMARY:
==1604==     in use at exit: 904 bytes in 58 blocks
==1604==   total heap usage: 58 allocs, 0 frees, 904 bytes allocated
==1604== 
==1604== LEAK SUMMARY:
==1604==    definitely lost: 0 bytes in 0 blocks
==1604==    indirectly lost: 0 bytes in 0 blocks
==1604==      possibly lost: 0 bytes in 0 blocks
==1604==    still reachable: 904 bytes in 58 blocks
==1604==         suppressed: 0 bytes in 0 blocks
==1604== Rerun with --leak-check=full to see details of leaked memory
==1604== 
==1604== For counts of detected and suppressed errors, rerun with: -v
==1604== Use --track-origins=yes to see where uninitialised values come from
==1604== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing add_empty_card(deck_t *)
timeout: the monitored command dumped core
Valgrind reported errors:
==1608== Memcheck, a memory error detector
==1608== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1608== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1608== Command: ./tester aec
==1608== Parent PID: 1607
==1608== 
==1608== Use of uninitialised value of size 8
==1608==    at 0x40205B: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1608==    by 0x4020AF: add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1608==    by 0x403ACE: check_add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1608==    by 0x400B08: main (in /graderhome/work/c4prj1_deck/tester)
==1608== 
==1608== Invalid write of size 4
==1608==    at 0x40205B: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1608==    by 0x4020AF: add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1608==    by 0x403ACE: check_add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1608==    by 0x400B08: main (in /graderhome/work/c4prj1_deck/tester)
==1608==  Address 0x4 is not stack'd, malloc'd or (recently) free'd
==1608== 
==1608== 
==1608== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1608==  Access not within mapped region at address 0x4
==1608==    at 0x40205B: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1608==    by 0x4020AF: add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1608==    by 0x403ACE: check_add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1608==    by 0x400B08: main (in /graderhome/work/c4prj1_deck/tester)
==1608==  If you believe this happened as a result of a stack
==1608==  overflow in your program's main thread (unlikely but
==1608==  possible), you can try to increase the size of the
==1608==  main thread stack using the --main-stacksize= flag.
==1608==  The main thread stack size used in this run was 8388608.
==1608== 
==1608== HEAP SUMMARY:
==1608==     in use at exit: 6,936 bytes in 447 blocks
==1608==   total heap usage: 455 allocs, 8 frees, 7,048 bytes allocated
==1608== 
==1608== LEAK SUMMARY:
==1608==    definitely lost: 0 bytes in 0 blocks
==1608==    indirectly lost: 0 bytes in 0 blocks
==1608==      possibly lost: 0 bytes in 0 blocks
==1608==    still reachable: 6,936 bytes in 447 blocks
==1608==         suppressed: 0 bytes in 0 blocks
==1608== Rerun with --leak-check=full to see details of leaked memory
==1608== 
==1608== For counts of detected and suppressed errors, rerun with: -v
==1608== Use --track-origins=yes to see where uninitialised values come from
==1608== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing make_deck_exclude(deck_t *)
timeout: the monitored command dumped core
Valgrind reported errors:
==1612== Memcheck, a memory error detector
==1612== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1612== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1612== Command: ./tester mde
==1612== Parent PID: 1611
==1612== 
==1612== Conditional jump or move depends on uninitialised value(s)
==1612==    at 0x4C2FD0C: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1612==    by 0x402030: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1612==    by 0x402194: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1612==    by 0x40378C: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1612==    by 0x400B08: main (in /graderhome/work/c4prj1_deck/tester)
==1612== 
==1612== Use of uninitialised value of size 8
==1612==    at 0x40205B: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1612==    by 0x402194: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1612==    by 0x40378C: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1612==    by 0x400B08: main (in /graderhome/work/c4prj1_deck/tester)
==1612== 
==1612== Invalid write of size 4
==1612==    at 0x40205B: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1612==    by 0x402194: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1612==    by 0x40378C: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1612==    by 0x400B08: main (in /graderhome/work/c4prj1_deck/tester)
==1612==  Address 0x4 is not stack'd, malloc'd or (recently) free'd
==1612== 
==1612== 
==1612== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1612==  Access not within mapped region at address 0x4
==1612==    at 0x40205B: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1612==    by 0x402194: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1612==    by 0x40378C: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1612==    by 0x400B08: main (in /graderhome/work/c4prj1_deck/tester)
==1612==  If you believe this happened as a result of a stack
==1612==  overflow in your program's main thread (unlikely but
==1612==  possible), you can try to increase the size of the
==1612==  main thread stack using the --main-stacksize= flag.
==1612==  The main thread stack size used in this run was 8388608.
==1612== 
==1612== HEAP SUMMARY:
==1612==     in use at exit: 888 bytes in 57 blocks
==1612==   total heap usage: 57 allocs, 0 frees, 888 bytes allocated
==1612== 
==1612== LEAK SUMMARY:
==1612==    definitely lost: 0 bytes in 0 blocks
==1612==    indirectly lost: 0 bytes in 0 blocks
==1612==      possibly lost: 0 bytes in 0 blocks
==1612==    still reachable: 888 bytes in 57 blocks
==1612==         suppressed: 0 bytes in 0 blocks
==1612== Rerun with --leak-check=full to see details of leaked memory
==1612== 
==1612== For counts of detected and suppressed errors, rerun with: -v
==1612== Use --track-origins=yes to see where uninitialised values come from
==1612== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)
Testing build_remaining_deck(deck_t **, size_t)
Testing with 1 hand
timeout: the monitored command dumped core
Valgrind reported errors:
==1616== Memcheck, a memory error detector
==1616== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1616== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1616== Command: ./tester brd
==1616== Parent PID: 1615
==1616== 
==1616== Use of uninitialised value of size 8
==1616==    at 0x40205B: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1616==    by 0x402264: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1616==    by 0x4033EC: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1616==    by 0x400B08: main (in /graderhome/work/c4prj1_deck/tester)
==1616== 
==1616== Invalid write of size 4
==1616==    at 0x40205B: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1616==    by 0x402264: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1616==    by 0x4033EC: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1616==    by 0x400B08: main (in /graderhome/work/c4prj1_deck/tester)
==1616==  Address 0x4 is not stack'd, malloc'd or (recently) free'd
==1616== 
==1616== 
==1616== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1616==  Access not within mapped region at address 0x4
==1616==    at 0x40205B: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1616==    by 0x402264: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1616==    by 0x4033EC: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1616==    by 0x400B08: main (in /graderhome/work/c4prj1_deck/tester)
==1616==  If you believe this happened as a result of a stack
==1616==  overflow in your program's main thread (unlikely but
==1616==  possible), you can try to increase the size of the
==1616==  main thread stack using the --main-stacksize= flag.
==1616==  The main thread stack size used in this run was 8388608.
==1616== 
==1616== HEAP SUMMARY:
==1616==     in use at exit: 104 bytes in 10 blocks
==1616==   total heap usage: 11 allocs, 1 frees, 4,200 bytes allocated
==1616== 
==1616== LEAK SUMMARY:
==1616==    definitely lost: 0 bytes in 0 blocks
==1616==    indirectly lost: 0 bytes in 0 blocks
==1616==      possibly lost: 0 bytes in 0 blocks
==1616==    still reachable: 104 bytes in 10 blocks
==1616==         suppressed: 0 bytes in 0 blocks
==1616== Rerun with --leak-check=full to see details of leaked memory
==1616== 
==1616== For counts of detected and suppressed errors, rerun with: -v
==1616== Use --track-origins=yes to see where uninitialised values come from
==1616== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing get_match_count(deck_t *)
- Test passed

Overall Grade: F
