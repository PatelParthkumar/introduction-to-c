Grading at Thu Mar  5 02:56:32 UTC 2020
Compiling deck.c -> deck.o
Compiling eval.c -> eval.o
Compiling cards.c -> cards.o
Linking eval.o, deck.o, cards.o, and our tester
Testing free_deck(deck_t *)
- Test passed
Testing add_card_to(deck_t *, card_t)
timeout: the monitored command dumped core
Valgrind reported errors:
==2812== Memcheck, a memory error detector
==2812== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2812== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2812== Command: ./tester act
==2812== Parent PID: 2811
==2812== 
==2812== Use of uninitialised value of size 8
==2812==    at 0x40205B: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==2812==    by 0x4040A2: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==2812==    by 0x400B08: main (in /graderhome/work/c4prj1_deck/tester)
==2812== 
==2812== Invalid write of size 4
==2812==    at 0x40205B: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==2812==    by 0x4040A2: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==2812==    by 0x400B08: main (in /graderhome/work/c4prj1_deck/tester)
==2812==  Address 0x4 is not stack'd, malloc'd or (recently) free'd
==2812== 
==2812== 
==2812== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2812==  Access not within mapped region at address 0x4
==2812==    at 0x40205B: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==2812==    by 0x4040A2: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==2812==    by 0x400B08: main (in /graderhome/work/c4prj1_deck/tester)
==2812==  If you believe this happened as a result of a stack
==2812==  overflow in your program's main thread (unlikely but
==2812==  possible), you can try to increase the size of the
==2812==  main thread stack using the --main-stacksize= flag.
==2812==  The main thread stack size used in this run was 8388608.
==2812== 
==2812== HEAP SUMMARY:
==2812==     in use at exit: 904 bytes in 58 blocks
==2812==   total heap usage: 58 allocs, 0 frees, 904 bytes allocated
==2812== 
==2812== LEAK SUMMARY:
==2812==    definitely lost: 0 bytes in 0 blocks
==2812==    indirectly lost: 0 bytes in 0 blocks
==2812==      possibly lost: 0 bytes in 0 blocks
==2812==    still reachable: 904 bytes in 58 blocks
==2812==         suppressed: 0 bytes in 0 blocks
==2812== Rerun with --leak-check=full to see details of leaked memory
==2812== 
==2812== For counts of detected and suppressed errors, rerun with: -v
==2812== Use --track-origins=yes to see where uninitialised values come from
==2812== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing add_empty_card(deck_t *)
timeout: the monitored command dumped core
Valgrind reported errors:
==2816== Memcheck, a memory error detector
==2816== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2816== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2816== Command: ./tester aec
==2816== Parent PID: 2815
==2816== 
==2816== Use of uninitialised value of size 8
==2816==    at 0x40205B: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==2816==    by 0x4020AF: add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==2816==    by 0x403ACE: check_add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==2816==    by 0x400B08: main (in /graderhome/work/c4prj1_deck/tester)
==2816== 
==2816== Invalid write of size 4
==2816==    at 0x40205B: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==2816==    by 0x4020AF: add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==2816==    by 0x403ACE: check_add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==2816==    by 0x400B08: main (in /graderhome/work/c4prj1_deck/tester)
==2816==  Address 0x4 is not stack'd, malloc'd or (recently) free'd
==2816== 
==2816== 
==2816== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2816==  Access not within mapped region at address 0x4
==2816==    at 0x40205B: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==2816==    by 0x4020AF: add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==2816==    by 0x403ACE: check_add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==2816==    by 0x400B08: main (in /graderhome/work/c4prj1_deck/tester)
==2816==  If you believe this happened as a result of a stack
==2816==  overflow in your program's main thread (unlikely but
==2816==  possible), you can try to increase the size of the
==2816==  main thread stack using the --main-stacksize= flag.
==2816==  The main thread stack size used in this run was 8388608.
==2816== 
==2816== HEAP SUMMARY:
==2816==     in use at exit: 6,936 bytes in 447 blocks
==2816==   total heap usage: 455 allocs, 8 frees, 7,048 bytes allocated
==2816== 
==2816== LEAK SUMMARY:
==2816==    definitely lost: 0 bytes in 0 blocks
==2816==    indirectly lost: 0 bytes in 0 blocks
==2816==      possibly lost: 0 bytes in 0 blocks
==2816==    still reachable: 6,936 bytes in 447 blocks
==2816==         suppressed: 0 bytes in 0 blocks
==2816== Rerun with --leak-check=full to see details of leaked memory
==2816== 
==2816== For counts of detected and suppressed errors, rerun with: -v
==2816== Use --track-origins=yes to see where uninitialised values come from
==2816== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing make_deck_exclude(deck_t *)
timeout: the monitored command dumped core
Valgrind reported errors:
==2820== Memcheck, a memory error detector
==2820== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2820== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2820== Command: ./tester mde
==2820== Parent PID: 2819
==2820== 
==2820== Conditional jump or move depends on uninitialised value(s)
==2820==    at 0x4C2FD0C: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==2820==    by 0x402030: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==2820==    by 0x402194: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==2820==    by 0x40378C: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==2820==    by 0x400B08: main (in /graderhome/work/c4prj1_deck/tester)
==2820== 
==2820== Use of uninitialised value of size 8
==2820==    at 0x40205B: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==2820==    by 0x402194: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==2820==    by 0x40378C: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==2820==    by 0x400B08: main (in /graderhome/work/c4prj1_deck/tester)
==2820== 
==2820== Invalid write of size 4
==2820==    at 0x40205B: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==2820==    by 0x402194: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==2820==    by 0x40378C: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==2820==    by 0x400B08: main (in /graderhome/work/c4prj1_deck/tester)
==2820==  Address 0x4 is not stack'd, malloc'd or (recently) free'd
==2820== 
==2820== 
==2820== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2820==  Access not within mapped region at address 0x4
==2820==    at 0x40205B: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==2820==    by 0x402194: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==2820==    by 0x40378C: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==2820==    by 0x400B08: main (in /graderhome/work/c4prj1_deck/tester)
==2820==  If you believe this happened as a result of a stack
==2820==  overflow in your program's main thread (unlikely but
==2820==  possible), you can try to increase the size of the
==2820==  main thread stack using the --main-stacksize= flag.
==2820==  The main thread stack size used in this run was 8388608.
==2820== 
==2820== HEAP SUMMARY:
==2820==     in use at exit: 888 bytes in 57 blocks
==2820==   total heap usage: 57 allocs, 0 frees, 888 bytes allocated
==2820== 
==2820== LEAK SUMMARY:
==2820==    definitely lost: 0 bytes in 0 blocks
==2820==    indirectly lost: 0 bytes in 0 blocks
==2820==      possibly lost: 0 bytes in 0 blocks
==2820==    still reachable: 888 bytes in 57 blocks
==2820==         suppressed: 0 bytes in 0 blocks
==2820== Rerun with --leak-check=full to see details of leaked memory
==2820== 
==2820== For counts of detected and suppressed errors, rerun with: -v
==2820== Use --track-origins=yes to see where uninitialised values come from
==2820== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)
Testing build_remaining_deck(deck_t **, size_t)
Testing with 1 hand
timeout: the monitored command dumped core
Valgrind reported errors:
==2824== Memcheck, a memory error detector
==2824== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2824== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2824== Command: ./tester brd
==2824== Parent PID: 2823
==2824== 
==2824== Use of uninitialised value of size 8
==2824==    at 0x40205B: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==2824==    by 0x402264: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==2824==    by 0x4033EC: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==2824==    by 0x400B08: main (in /graderhome/work/c4prj1_deck/tester)
==2824== 
==2824== Invalid write of size 4
==2824==    at 0x40205B: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==2824==    by 0x402264: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==2824==    by 0x4033EC: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==2824==    by 0x400B08: main (in /graderhome/work/c4prj1_deck/tester)
==2824==  Address 0x4 is not stack'd, malloc'd or (recently) free'd
==2824== 
==2824== 
==2824== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2824==  Access not within mapped region at address 0x4
==2824==    at 0x40205B: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==2824==    by 0x402264: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==2824==    by 0x4033EC: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==2824==    by 0x400B08: main (in /graderhome/work/c4prj1_deck/tester)
==2824==  If you believe this happened as a result of a stack
==2824==  overflow in your program's main thread (unlikely but
==2824==  possible), you can try to increase the size of the
==2824==  main thread stack using the --main-stacksize= flag.
==2824==  The main thread stack size used in this run was 8388608.
==2824== 
==2824== HEAP SUMMARY:
==2824==     in use at exit: 104 bytes in 10 blocks
==2824==   total heap usage: 11 allocs, 1 frees, 4,200 bytes allocated
==2824== 
==2824== LEAK SUMMARY:
==2824==    definitely lost: 0 bytes in 0 blocks
==2824==    indirectly lost: 0 bytes in 0 blocks
==2824==      possibly lost: 0 bytes in 0 blocks
==2824==    still reachable: 104 bytes in 10 blocks
==2824==         suppressed: 0 bytes in 0 blocks
==2824== Rerun with --leak-check=full to see details of leaked memory
==2824== 
==2824== For counts of detected and suppressed errors, rerun with: -v
==2824== Use --track-origins=yes to see where uninitialised values come from
==2824== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing get_match_count(deck_t *)
- Test passed

Overall Grade: F
