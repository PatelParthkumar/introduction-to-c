Grading at Fri Dec 27 06:17:14 UTC 2019
Compiling your code
rm -f test poker cards.o my-test-main.o *~
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o deck.o deck.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o eval.o eval.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o cards.o cards.c
gcc -o test-eval -ggdb3 deck.o deck-c4.o eval-c4.o eval.o test-eval.o cards.o input.o future.o
Testcase 1: Trying hands with nothing
Valgrind returned an error status
==3853== Memcheck, a memory error detector
==3853== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==3853== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==3853== Command: ./test-eval inp.1.txt
==3853== Parent PID: 3852
==3853== 
==3853== Use of uninitialised value of size 8
==3853==    at 0x400C02: print_hand (deck.c:19)
==3853==    by 0x4028A7: describe_hand (test-eval.c:74)
==3853==    by 0x402A87: main (test-eval.c:116)
==3853== 
==3853== Invalid read of size 8
==3853==    at 0x400C02: print_hand (deck.c:19)
==3853==    by 0x4028A7: describe_hand (test-eval.c:74)
==3853==    by 0x402A87: main (test-eval.c:116)
==3853==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==3853== 
==3853== 
==3853== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==3853==  Access not within mapped region at address 0x0
==3853==    at 0x400C02: print_hand (deck.c:19)
==3853==    by 0x4028A7: describe_hand (test-eval.c:74)
==3853==    by 0x402A87: main (test-eval.c:116)
==3853==  If you believe this happened as a result of a stack
==3853==  overflow in your program's main thread (unlikely but
==3853==  possible), you can try to increase the size of the
==3853==  main thread stack using the --main-stacksize= flag.
==3853==  The main thread stack size used in this run was 8388608.
==3853== 
==3853== HEAP SUMMARY:
==3853==     in use at exit: 864 bytes in 16 blocks
==3853==   total heap usage: 202 allocs, 186 frees, 12,472 bytes allocated
==3853== 
==3853== LEAK SUMMARY:
==3853==    definitely lost: 0 bytes in 0 blocks
==3853==    indirectly lost: 0 bytes in 0 blocks
==3853==      possibly lost: 0 bytes in 0 blocks
==3853==    still reachable: 864 bytes in 16 blocks
==3853==         suppressed: 0 bytes in 0 blocks
==3853== Rerun with --leak-check=full to see details of leaked memory
==3853== 
==3853== For counts of detected and suppressed errors, rerun with: -v
==3853== Use --track-origins=yes to see where uninitialised values come from
==3853== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testcase 2: Trying hands with pairs
Valgrind returned an error status
==3858== Memcheck, a memory error detector
==3858== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==3858== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==3858== Command: ./test-eval inp.2.txt
==3858== Parent PID: 3857
==3858== 
==3858== Use of uninitialised value of size 8
==3858==    at 0x400C02: print_hand (deck.c:19)
==3858==    by 0x4028A7: describe_hand (test-eval.c:74)
==3858==    by 0x402AA7: main (test-eval.c:119)
==3858== 
==3858== Invalid read of size 8
==3858==    at 0x400C02: print_hand (deck.c:19)
==3858==    by 0x4028A7: describe_hand (test-eval.c:74)
==3858==    by 0x402AA7: main (test-eval.c:119)
==3858==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==3858== 
==3858== 
==3858== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==3858==  Access not within mapped region at address 0x0
==3858==    at 0x400C02: print_hand (deck.c:19)
==3858==    by 0x4028A7: describe_hand (test-eval.c:74)
==3858==    by 0x402AA7: main (test-eval.c:119)
==3858==  If you believe this happened as a result of a stack
==3858==  overflow in your program's main thread (unlikely but
==3858==  possible), you can try to increase the size of the
==3858==  main thread stack using the --main-stacksize= flag.
==3858==  The main thread stack size used in this run was 8388608.
==3858== 
==3858== HEAP SUMMARY:
==3858==     in use at exit: 880 bytes in 17 blocks
==3858==   total heap usage: 32 allocs, 15 frees, 9,360 bytes allocated
==3858== 
==3858== LEAK SUMMARY:
==3858==    definitely lost: 0 bytes in 0 blocks
==3858==    indirectly lost: 0 bytes in 0 blocks
==3858==      possibly lost: 0 bytes in 0 blocks
==3858==    still reachable: 880 bytes in 17 blocks
==3858==         suppressed: 0 bytes in 0 blocks
==3858== Rerun with --leak-check=full to see details of leaked memory
==3858== 
==3858== For counts of detected and suppressed errors, rerun with: -v
==3858== Use --track-origins=yes to see where uninitialised values come from
==3858== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testcase 3: Trying hands with 2 pairs
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 4: Trying hands with 3 of a kind
Valgrind returned an error status
==3875== Memcheck, a memory error detector
==3875== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==3875== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==3875== Command: ./test-eval inp.4.txt
==3875== Parent PID: 3874
==3875== 
==3875== Use of uninitialised value of size 8
==3875==    at 0x400C02: print_hand (deck.c:19)
==3875==    by 0x4028A7: describe_hand (test-eval.c:74)
==3875==    by 0x402A87: main (test-eval.c:116)
==3875== 
==3875== Invalid read of size 8
==3875==    at 0x400C02: print_hand (deck.c:19)
==3875==    by 0x4028A7: describe_hand (test-eval.c:74)
==3875==    by 0x402A87: main (test-eval.c:116)
==3875==  Address 0x520bd30 is 0 bytes inside a block of size 24 free'd
==3875==    at 0x4C2EDEB: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3875==    by 0x4020A1: evaluate_hand (eval.c:514)
==3875==    by 0x40285C: describe_hand (test-eval.c:68)
==3875==    by 0x402A87: main (test-eval.c:116)
==3875==  Block was alloc'd at
==3875==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3875==    by 0x4013DE: get_match_counts (eval-c4.c:70)
==3875==    by 0x40201F: evaluate_hand (eval.c:509)
==3875==    by 0x40285C: describe_hand (test-eval.c:68)
==3875==    by 0x402A87: main (test-eval.c:116)
==3875== 
==3875== 
==3875== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==3875==  Access not within mapped region at address 0x0
==3875==    at 0x400C02: print_hand (deck.c:19)
==3875==    by 0x4028A7: describe_hand (test-eval.c:74)
==3875==    by 0x402A87: main (test-eval.c:116)
==3875==  If you believe this happened as a result of a stack
==3875==  overflow in your program's main thread (unlikely but
==3875==  possible), you can try to increase the size of the
==3875==  main thread stack using the --main-stacksize= flag.
==3875==  The main thread stack size used in this run was 8388608.
==3875== 
==3875== HEAP SUMMARY:
==3875==     in use at exit: 896 bytes in 18 blocks
==3875==   total heap usage: 264 allocs, 246 frees, 13,664 bytes allocated
==3875== 
==3875== LEAK SUMMARY:
==3875==    definitely lost: 0 bytes in 0 blocks
==3875==    indirectly lost: 0 bytes in 0 blocks
==3875==      possibly lost: 0 bytes in 0 blocks
==3875==    still reachable: 896 bytes in 18 blocks
==3875==         suppressed: 0 bytes in 0 blocks
==3875== Rerun with --leak-check=full to see details of leaked memory
==3875== 
==3875== For counts of detected and suppressed errors, rerun with: -v
==3875== Use --track-origins=yes to see where uninitialised values come from
==3875== ERROR SUMMARY: 4 errors from 2 contexts (suppressed: 0 from 0)
Testcase 5: Trying hands with straights
 Checking the output 
Line_129_did_not_match
Line_132_did_not_match
Your file did not match the expected ouput
 - Output did not match, testcase failed
Hand 1:								Hand 1:
--------							--------
0s 9s 8c 7h 6d 							0s 9s 8c 7h 6d 
 - No flush							 - No flush
 - Straight at index 0						 - Straight at index 0
 - The most of a kind is 1 of a kind (at index 0 / value 0)	 - The most of a kind is 1 of a kind (at index 0 / value 0)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT				 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: 0s 9s 8c 7h 6d 			 - 5 cards used for hand: 0s 9s 8c 7h 6d 
Hand 2:								Hand 2:
--------							--------
Js 0c 9s 8d 7c 							Js 0c 9s 8d 7c 
 - No flush							 - No flush
 - Straight at index 0						 - Straight at index 0
 - The most of a kind is 1 of a kind (at index 0 / value J)	 - The most of a kind is 1 of a kind (at index 0 / value J)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT				 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: Js 0c 9s 8d 7c 			 - 5 cards used for hand: Js 0c 9s 8d 7c 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
As 5c 4h 3s 2c 							As 5c 4h 3s 2c 
 - No flush							 - No flush
 - Straight at index 0						 - Straight at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT				 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: 5c 4h 3s 2c As 			 - 5 cards used for hand: 5c 4h 3s 2c As 
Hand 2:								Hand 2:
--------							--------
6c 5h 4s 3s 2d 							6c 5h 4s 3s 2d 
 - No flush							 - No flush
 - Straight at index 0						 - Straight at index 0
 - The most of a kind is 1 of a kind (at index 0 / value 6)	 - The most of a kind is 1 of a kind (at index 0 / value 6)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT				 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: 6c 5h 4s 3s 2d 			 - 5 cards used for hand: 6c 5h 4s 3s 2d 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Qh Qs Jd Js 0c 0s 9d 8c 					Qh Qs Jd Js 0c 0s 9d 8c 
 - No flush							 - No flush
 - Straight at index 0						 - Straight at index 0
 - Straight at index 1						 - Straight at index 1
 - The most of a kind is 2 of a kind (at index 0 / value Q)	 - The most of a kind is 2 of a kind (at index 0 / value Q)
 - Secondary pair at index 2 (value J)				 - Secondary pair at index 2 (value J)
 - evaluate_hand's ranking: STRAIGHT				 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: Qh Jd 0c 9d 8c 			 - 5 cards used for hand: Qh Jd 0c 9d 8c 
Hand 2:								Hand 2:
--------							--------
Kc Qh Qs Jd Js 0c 0s 9d 					Kc Qh Qs Jd Js 0c 0s 9d 
 - No flush							 - No flush
 - Straight at index 0						 - Straight at index 0
 - The most of a kind is 2 of a kind (at index 1 / value Q)	 - The most of a kind is 2 of a kind (at index 1 / value Q)
 - Secondary pair at index 3 (value J)				 - Secondary pair at index 3 (value J)
 - evaluate_hand's ranking: STRAIGHT				 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: Kc Qh Jd 0c 9d 			 - 5 cards used for hand: Kc Qh Jd 0c 9d 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
As Jd 9h 8c 7d 6c 5d 						As Jd 9h 8c 7d 6c 5d 
 - No flush							 - No flush
 - Straight at index 2						 - Straight at index 2
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT				 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: 9h 8c 7d 6c 5d 			 - 5 cards used for hand: 9h 8c 7d 6c 5d 
Hand 2:								Hand 2:
--------							--------
Kc Qh 8c 7h 6c 5d 4s 						Kc Qh 8c 7h 6c 5d 4s 
 - No flush							 - No flush
 - Straight at index 2						 - Straight at index 2
 - The most of a kind is 1 of a kind (at index 0 / value K)	 - The most of a kind is 1 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT				 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: 8c 7h 6c 5d 4s 			 - 5 cards used for hand: 8c 7h 6c 5d 4s 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
As Kd Qs Jd 0s 							As Kd Qs Jd 0s 
 - No flush							 - No flush
 - Straight at index 0						 - Straight at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT				 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: As Kd Qs Jd 0s 			 - 5 cards used for hand: As Kd Qs Jd 0s 
Hand 2:								Hand 2:
--------							--------
Ac 5s 4c 3s 2s 							Ac 5s 4c 3s 2s 
 - No flush							 - No flush
 - Straight at index 0						 - Straight at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT				 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: 5s 4c 3s 2s Ac 			 - 5 cards used for hand: 5s 4c 3s 2s Ac 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Jh 0s 9c 8s 7c 4c 3d 						Jh 0s 9c 8s 7c 4c 3d 
 - No flush							 - No flush
 - Straight at index 0						 - Straight at index 0
 - The most of a kind is 1 of a kind (at index 0 / value J)	 - The most of a kind is 1 of a kind (at index 0 / value J)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT				 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: Jh 0s 9c 8s 7c 			 - 5 cards used for hand: Jh 0s 9c 8s 7c 
Hand 2:								Hand 2:
--------							--------
Jh 0s 9c 8s 7c 6c 5d 						Jh 0s 9c 8s 7c 6c 5d 
 - No flush							 - No flush
 - Straight at index 0					      <
 - Straight at index 1					      <
 - Straight at index 2						 - Straight at index 2
 - The most of a kind is 1 of a kind (at index 0 / value J)	 - The most of a kind is 1 of a kind (at index 0 / value J)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT				 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: Jh 0s 9c 8s 7c 		      |	 - 5 cards used for hand: 9c 8s 7c 6c 5d 
Comparison : 							Comparison : 
--------------							--------------
Tie							      |	Hand 1 wins!
============================					============================
Testcase 6: Trying hands with flushes
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 7: Trying hands with full houses
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 8: Trying hands with 4 of a kind
Valgrind returned an error status
==3917== Memcheck, a memory error detector
==3917== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==3917== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==3917== Command: ./test-eval inp.8.txt
==3917== Parent PID: 3916
==3917== 
==3917== Use of uninitialised value of size 8
==3917==    at 0x400C02: print_hand (deck.c:19)
==3917==    by 0x4028A7: describe_hand (test-eval.c:74)
==3917==    by 0x402AA7: main (test-eval.c:119)
==3917== 
==3917== Invalid read of size 8
==3917==    at 0x400C02: print_hand (deck.c:19)
==3917==    by 0x4028A7: describe_hand (test-eval.c:74)
==3917==    by 0x402AA7: main (test-eval.c:119)
==3917==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==3917== 
==3917== 
==3917== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==3917==  Access not within mapped region at address 0x0
==3917==    at 0x400C02: print_hand (deck.c:19)
==3917==    by 0x4028A7: describe_hand (test-eval.c:74)
==3917==    by 0x402AA7: main (test-eval.c:119)
==3917==  If you believe this happened as a result of a stack
==3917==  overflow in your program's main thread (unlikely but
==3917==  possible), you can try to increase the size of the
==3917==  main thread stack using the --main-stacksize= flag.
==3917==  The main thread stack size used in this run was 8388608.
==3917== 
==3917== HEAP SUMMARY:
==3917==     in use at exit: 896 bytes in 18 blocks
==3917==   total heap usage: 150 allocs, 132 frees, 11,568 bytes allocated
==3917== 
==3917== LEAK SUMMARY:
==3917==    definitely lost: 0 bytes in 0 blocks
==3917==    indirectly lost: 0 bytes in 0 blocks
==3917==      possibly lost: 0 bytes in 0 blocks
==3917==    still reachable: 896 bytes in 18 blocks
==3917==         suppressed: 0 bytes in 0 blocks
==3917== Rerun with --leak-check=full to see details of leaked memory
==3917== 
==3917== For counts of detected and suppressed errors, rerun with: -v
==3917== Use --track-origins=yes to see where uninitialised values come from
==3917== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testcase 9: Trying hands with straight flushes
 Checking the output 
Line_31_did_not_match
Line_40_did_not_match
Line_50_did_not_match
Line_53_did_not_match
Your file did not match the expected ouput
 - Output did not match, testcase failed
Hand 1:								Hand 1:
--------							--------
As Ks Qs Js 0s 							As Ks Qs Js 0s 
 - Flush in suit s						 - Flush in suit s
 - Straight flush at index 0					 - Straight flush at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: As Ks Qs Js 0s 			 - 5 cards used for hand: As Ks Qs Js 0s 
Hand 2:								Hand 2:
--------							--------
Kh Qh Jh 0h 9h 							Kh Qh Jh 0h 9h 
 - Flush in suit h						 - Flush in suit h
 - Straight flush at index 0					 - Straight flush at index 0
 - The most of a kind is 1 of a kind (at index 0 / value K)	 - The most of a kind is 1 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: Kh Qh Jh 0h 9h 			 - 5 cards used for hand: Kh Qh Jh 0h 9h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
As Ks Qs Js 0s 9s 8s 						As Ks Qs Js 0s 9s 8s 
 - Flush in suit s						 - Flush in suit s
 - Straight flush at index 0				      <
 - Straight flush at index 1				      <
 - Straight flush at index 2					 - Straight flush at index 2
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: As Ks Qs Js 0s 		      |	 - 5 cards used for hand: Qs Js 0s 9s 8s 
Hand 2:								Hand 2:
--------							--------
Kh Qh Jh 0h 9h 8h 7h 						Kh Qh Jh 0h 9h 8h 7h 
 - Flush in suit h						 - Flush in suit h
 - Straight flush at index 0				      <
 - Straight flush at index 1				      <
 - Straight flush at index 2					 - Straight flush at index 2
 - The most of a kind is 1 of a kind (at index 0 / value K)	 - The most of a kind is 1 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: Kh Qh Jh 0h 9h 		      |	 - 5 cards used for hand: Jh 0h 9h 8h 7h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ac As Kc Ks Qs Js 0s 						Ac As Kc Ks Qs Js 0s 
 - Flush in suit s						 - Flush in suit s
 - Straight at index 0						 - Straight at index 0
 - Straight flush at index 1				      |	 - Straight at index 1
 - The most of a kind is 2 of a kind (at index 0 / value A)	 - The most of a kind is 2 of a kind (at index 0 / value A)
 - Secondary pair at index 2 (value K)				 - Secondary pair at index 2 (value K)
 - evaluate_hand's ranking: STRAIGHT_FLUSH		      |	 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: As Ks Qs Js 0s 			 - 5 cards used for hand: As Ks Qs Js 0s 
Hand 2:								Hand 2:
--------							--------
Ad Kh Qh Jh Js 0h 9h 						Ad Kh Qh Jh Js 0h 9h 
 - Flush in suit h						 - Flush in suit h
 - Straight at index 0					      <
 - Straight flush at index 1					 - Straight flush at index 1
 - The most of a kind is 2 of a kind (at index 3 / value J)	 - The most of a kind is 2 of a kind (at index 3 / value J)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: Kh Qh Jh 0h 9h 			 - 5 cards used for hand: Kh Qh Jh 0h 9h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ah Kc 5h 4h 3h 2h 						Ah Kc 5h 4h 3h 2h 
 - Flush in suit h						 - Flush in suit h
 - Straight flush at index 0					 - Straight flush at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: 5h 4h 3h 2h Ah 			 - 5 cards used for hand: 5h 4h 3h 2h Ah 
Hand 2:								Hand 2:
--------							--------
Ac 6c 5c 4c 3c 2c 						Ac 6c 5c 4c 3c 2c 
 - Flush in suit c						 - Flush in suit c
 - Straight flush at index 0					 - Straight flush at index 0
 - Straight flush at index 1					 - Straight flush at index 1
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: 5c 4c 3c 2c Ac 			 - 5 cards used for hand: 5c 4c 3c 2c Ac 
Comparison : 							Comparison : 
--------------							--------------
Tie								Tie
============================					============================
Hand 1:								Hand 1:
--------							--------
As Ks Qs Js 0s 							As Ks Qs Js 0s 
 - Flush in suit s						 - Flush in suit s
 - Straight flush at index 0					 - Straight flush at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: As Ks Qs Js 0s 			 - 5 cards used for hand: As Ks Qs Js 0s 
Hand 2:								Hand 2:
--------							--------
As 5s 4s 3s 2s 							As 5s 4s 3s 2s 
 - Flush in suit s						 - Flush in suit s
 - Straight flush at index 0					 - Straight flush at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: 5s 4s 3s 2s As 			 - 5 cards used for hand: 5s 4s 3s 2s As 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Testcase 10: Trying each type of hand ranking
Valgrind returned an error status
==3935== Memcheck, a memory error detector
==3935== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==3935== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==3935== Command: ./test-eval inp.10.txt
==3935== Parent PID: 3934
==3935== 
==3935== Use of uninitialised value of size 8
==3935==    at 0x400C02: print_hand (deck.c:19)
==3935==    by 0x4028A7: describe_hand (test-eval.c:74)
==3935==    by 0x402AA7: main (test-eval.c:119)
==3935== 
==3935== Invalid read of size 8
==3935==    at 0x400C02: print_hand (deck.c:19)
==3935==    by 0x4028A7: describe_hand (test-eval.c:74)
==3935==    by 0x402AA7: main (test-eval.c:119)
==3935==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==3935== 
==3935== 
==3935== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==3935==  Access not within mapped region at address 0x0
==3935==    at 0x400C02: print_hand (deck.c:19)
==3935==    by 0x4028A7: describe_hand (test-eval.c:74)
==3935==    by 0x402AA7: main (test-eval.c:119)
==3935==  If you believe this happened as a result of a stack
==3935==  overflow in your program's main thread (unlikely but
==3935==  possible), you can try to increase the size of the
==3935==  main thread stack using the --main-stacksize= flag.
==3935==  The main thread stack size used in this run was 8388608.
==3935== 
==3935== HEAP SUMMARY:
==3935==     in use at exit: 880 bytes in 17 blocks
==3935==   total heap usage: 210 allocs, 193 frees, 12,716 bytes allocated
==3935== 
==3935== LEAK SUMMARY:
==3935==    definitely lost: 0 bytes in 0 blocks
==3935==    indirectly lost: 0 bytes in 0 blocks
==3935==      possibly lost: 0 bytes in 0 blocks
==3935==    still reachable: 880 bytes in 17 blocks
==3935==         suppressed: 0 bytes in 0 blocks
==3935== Rerun with --leak-check=full to see details of leaked memory
==3935== 
==3935== For counts of detected and suppressed errors, rerun with: -v
==3935== Use --track-origins=yes to see where uninitialised values come from
==3935== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

Overall Grade: F
