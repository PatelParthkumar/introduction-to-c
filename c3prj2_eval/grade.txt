Grading at Fri Dec 27 06:14:17 UTC 2019
Compiling your code
rm -f test poker cards.o my-test-main.o *~
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o deck.o deck.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o eval.o eval.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o cards.o cards.c
gcc -o test-eval -ggdb3 deck.o deck-c4.o eval-c4.o eval.o test-eval.o cards.o input.o future.o
Testcase 1: Trying hands with nothing
Valgrind returned an error status
==3629== Memcheck, a memory error detector
==3629== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==3629== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==3629== Command: ./test-eval inp.1.txt
==3629== Parent PID: 3628
==3629== 
==3629== Use of uninitialised value of size 8
==3629==    at 0x400C02: print_hand (deck.c:19)
==3629==    by 0x4028BA: describe_hand (test-eval.c:74)
==3629==    by 0x402A9A: main (test-eval.c:116)
==3629== 
==3629== Invalid read of size 8
==3629==    at 0x400C02: print_hand (deck.c:19)
==3629==    by 0x4028BA: describe_hand (test-eval.c:74)
==3629==    by 0x402A9A: main (test-eval.c:116)
==3629==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==3629== 
==3629== 
==3629== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==3629==  Access not within mapped region at address 0x0
==3629==    at 0x400C02: print_hand (deck.c:19)
==3629==    by 0x4028BA: describe_hand (test-eval.c:74)
==3629==    by 0x402A9A: main (test-eval.c:116)
==3629==  If you believe this happened as a result of a stack
==3629==  overflow in your program's main thread (unlikely but
==3629==  possible), you can try to increase the size of the
==3629==  main thread stack using the --main-stacksize= flag.
==3629==  The main thread stack size used in this run was 8388608.
==3629== 
==3629== HEAP SUMMARY:
==3629==     in use at exit: 864 bytes in 16 blocks
==3629==   total heap usage: 202 allocs, 186 frees, 12,472 bytes allocated
==3629== 
==3629== LEAK SUMMARY:
==3629==    definitely lost: 0 bytes in 0 blocks
==3629==    indirectly lost: 0 bytes in 0 blocks
==3629==      possibly lost: 0 bytes in 0 blocks
==3629==    still reachable: 864 bytes in 16 blocks
==3629==         suppressed: 0 bytes in 0 blocks
==3629== Rerun with --leak-check=full to see details of leaked memory
==3629== 
==3629== For counts of detected and suppressed errors, rerun with: -v
==3629== Use --track-origins=yes to see where uninitialised values come from
==3629== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testcase 2: Trying hands with pairs
Valgrind returned an error status
==3634== Memcheck, a memory error detector
==3634== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==3634== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==3634== Command: ./test-eval inp.2.txt
==3634== Parent PID: 3633
==3634== 
==3634== Use of uninitialised value of size 8
==3634==    at 0x400C02: print_hand (deck.c:19)
==3634==    by 0x4028BA: describe_hand (test-eval.c:74)
==3634==    by 0x402ABA: main (test-eval.c:119)
==3634== 
==3634== Invalid read of size 8
==3634==    at 0x400C02: print_hand (deck.c:19)
==3634==    by 0x4028BA: describe_hand (test-eval.c:74)
==3634==    by 0x402ABA: main (test-eval.c:119)
==3634==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==3634== 
==3634== 
==3634== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==3634==  Access not within mapped region at address 0x0
==3634==    at 0x400C02: print_hand (deck.c:19)
==3634==    by 0x4028BA: describe_hand (test-eval.c:74)
==3634==    by 0x402ABA: main (test-eval.c:119)
==3634==  If you believe this happened as a result of a stack
==3634==  overflow in your program's main thread (unlikely but
==3634==  possible), you can try to increase the size of the
==3634==  main thread stack using the --main-stacksize= flag.
==3634==  The main thread stack size used in this run was 8388608.
==3634== 
==3634== HEAP SUMMARY:
==3634==     in use at exit: 880 bytes in 17 blocks
==3634==   total heap usage: 32 allocs, 15 frees, 9,360 bytes allocated
==3634== 
==3634== LEAK SUMMARY:
==3634==    definitely lost: 0 bytes in 0 blocks
==3634==    indirectly lost: 0 bytes in 0 blocks
==3634==      possibly lost: 0 bytes in 0 blocks
==3634==    still reachable: 880 bytes in 17 blocks
==3634==         suppressed: 0 bytes in 0 blocks
==3634== Rerun with --leak-check=full to see details of leaked memory
==3634== 
==3634== For counts of detected and suppressed errors, rerun with: -v
==3634== Use --track-origins=yes to see where uninitialised values come from
==3634== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testcase 3: Trying hands with 2 pairs
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 4: Trying hands with 3 of a kind
Valgrind returned an error status
==3651== Memcheck, a memory error detector
==3651== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==3651== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==3651== Command: ./test-eval inp.4.txt
==3651== Parent PID: 3650
==3651== 
==3651== Use of uninitialised value of size 8
==3651==    at 0x400C02: print_hand (deck.c:19)
==3651==    by 0x4028BA: describe_hand (test-eval.c:74)
==3651==    by 0x402A9A: main (test-eval.c:116)
==3651== 
==3651== Invalid read of size 8
==3651==    at 0x400C02: print_hand (deck.c:19)
==3651==    by 0x4028BA: describe_hand (test-eval.c:74)
==3651==    by 0x402A9A: main (test-eval.c:116)
==3651==  Address 0x520bd30 is 0 bytes inside a block of size 24 free'd
==3651==    at 0x4C2EDEB: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3651==    by 0x4020B4: evaluate_hand (eval.c:519)
==3651==    by 0x40286F: describe_hand (test-eval.c:68)
==3651==    by 0x402A9A: main (test-eval.c:116)
==3651==  Block was alloc'd at
==3651==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3651==    by 0x4013DE: get_match_counts (eval-c4.c:70)
==3651==    by 0x402032: evaluate_hand (eval.c:514)
==3651==    by 0x40286F: describe_hand (test-eval.c:68)
==3651==    by 0x402A9A: main (test-eval.c:116)
==3651== 
==3651== 
==3651== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==3651==  Access not within mapped region at address 0x0
==3651==    at 0x400C02: print_hand (deck.c:19)
==3651==    by 0x4028BA: describe_hand (test-eval.c:74)
==3651==    by 0x402A9A: main (test-eval.c:116)
==3651==  If you believe this happened as a result of a stack
==3651==  overflow in your program's main thread (unlikely but
==3651==  possible), you can try to increase the size of the
==3651==  main thread stack using the --main-stacksize= flag.
==3651==  The main thread stack size used in this run was 8388608.
==3651== 
==3651== HEAP SUMMARY:
==3651==     in use at exit: 896 bytes in 18 blocks
==3651==   total heap usage: 264 allocs, 246 frees, 13,664 bytes allocated
==3651== 
==3651== LEAK SUMMARY:
==3651==    definitely lost: 0 bytes in 0 blocks
==3651==    indirectly lost: 0 bytes in 0 blocks
==3651==      possibly lost: 0 bytes in 0 blocks
==3651==    still reachable: 896 bytes in 18 blocks
==3651==         suppressed: 0 bytes in 0 blocks
==3651== Rerun with --leak-check=full to see details of leaked memory
==3651== 
==3651== For counts of detected and suppressed errors, rerun with: -v
==3651== Use --track-origins=yes to see where uninitialised values come from
==3651== ERROR SUMMARY: 4 errors from 2 contexts (suppressed: 0 from 0)
Testcase 5: Trying hands with straights
 Checking the output 
Line_129_did_not_match
Line_132_did_not_match
Your file did not match the expected ouput
 - Output did not match, testcase failed
Hand 1:								Hand 1:
--------							--------
0s 9s 8c 7h 6d 							0s 9s 8c 7h 6d 
 - No flush							 - No flush
 - Straight at index 0						 - Straight at index 0
 - The most of a kind is 1 of a kind (at index 0 / value 0)	 - The most of a kind is 1 of a kind (at index 0 / value 0)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT				 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: 0s 9s 8c 7h 6d 			 - 5 cards used for hand: 0s 9s 8c 7h 6d 
Hand 2:								Hand 2:
--------							--------
Js 0c 9s 8d 7c 							Js 0c 9s 8d 7c 
 - No flush							 - No flush
 - Straight at index 0						 - Straight at index 0
 - The most of a kind is 1 of a kind (at index 0 / value J)	 - The most of a kind is 1 of a kind (at index 0 / value J)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT				 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: Js 0c 9s 8d 7c 			 - 5 cards used for hand: Js 0c 9s 8d 7c 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
As 5c 4h 3s 2c 							As 5c 4h 3s 2c 
 - No flush							 - No flush
 - Straight at index 0						 - Straight at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT				 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: 5c 4h 3s 2c As 			 - 5 cards used for hand: 5c 4h 3s 2c As 
Hand 2:								Hand 2:
--------							--------
6c 5h 4s 3s 2d 							6c 5h 4s 3s 2d 
 - No flush							 - No flush
 - Straight at index 0						 - Straight at index 0
 - The most of a kind is 1 of a kind (at index 0 / value 6)	 - The most of a kind is 1 of a kind (at index 0 / value 6)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT				 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: 6c 5h 4s 3s 2d 			 - 5 cards used for hand: 6c 5h 4s 3s 2d 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Qh Qs Jd Js 0c 0s 9d 8c 					Qh Qs Jd Js 0c 0s 9d 8c 
 - No flush							 - No flush
 - Straight at index 0						 - Straight at index 0
 - Straight at index 1						 - Straight at index 1
 - The most of a kind is 2 of a kind (at index 0 / value Q)	 - The most of a kind is 2 of a kind (at index 0 / value Q)
 - Secondary pair at index 2 (value J)				 - Secondary pair at index 2 (value J)
 - evaluate_hand's ranking: STRAIGHT				 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: Qh Jd 0c 9d 8c 			 - 5 cards used for hand: Qh Jd 0c 9d 8c 
Hand 2:								Hand 2:
--------							--------
Kc Qh Qs Jd Js 0c 0s 9d 					Kc Qh Qs Jd Js 0c 0s 9d 
 - No flush							 - No flush
 - Straight at index 0						 - Straight at index 0
 - The most of a kind is 2 of a kind (at index 1 / value Q)	 - The most of a kind is 2 of a kind (at index 1 / value Q)
 - Secondary pair at index 3 (value J)				 - Secondary pair at index 3 (value J)
 - evaluate_hand's ranking: STRAIGHT				 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: Kc Qh Jd 0c 9d 			 - 5 cards used for hand: Kc Qh Jd 0c 9d 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
As Jd 9h 8c 7d 6c 5d 						As Jd 9h 8c 7d 6c 5d 
 - No flush							 - No flush
 - Straight at index 2						 - Straight at index 2
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT				 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: 9h 8c 7d 6c 5d 			 - 5 cards used for hand: 9h 8c 7d 6c 5d 
Hand 2:								Hand 2:
--------							--------
Kc Qh 8c 7h 6c 5d 4s 						Kc Qh 8c 7h 6c 5d 4s 
 - No flush							 - No flush
 - Straight at index 2						 - Straight at index 2
 - The most of a kind is 1 of a kind (at index 0 / value K)	 - The most of a kind is 1 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT				 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: 8c 7h 6c 5d 4s 			 - 5 cards used for hand: 8c 7h 6c 5d 4s 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
As Kd Qs Jd 0s 							As Kd Qs Jd 0s 
 - No flush							 - No flush
 - Straight at index 0						 - Straight at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT				 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: As Kd Qs Jd 0s 			 - 5 cards used for hand: As Kd Qs Jd 0s 
Hand 2:								Hand 2:
--------							--------
Ac 5s 4c 3s 2s 							Ac 5s 4c 3s 2s 
 - No flush							 - No flush
 - Straight at index 0						 - Straight at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT				 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: 5s 4c 3s 2s Ac 			 - 5 cards used for hand: 5s 4c 3s 2s Ac 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Jh 0s 9c 8s 7c 4c 3d 						Jh 0s 9c 8s 7c 4c 3d 
 - No flush							 - No flush
 - Straight at index 0						 - Straight at index 0
 - The most of a kind is 1 of a kind (at index 0 / value J)	 - The most of a kind is 1 of a kind (at index 0 / value J)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT				 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: Jh 0s 9c 8s 7c 			 - 5 cards used for hand: Jh 0s 9c 8s 7c 
Hand 2:								Hand 2:
--------							--------
Jh 0s 9c 8s 7c 6c 5d 						Jh 0s 9c 8s 7c 6c 5d 
 - No flush							 - No flush
 - Straight at index 0					      <
 - Straight at index 1					      <
 - Straight at index 2						 - Straight at index 2
 - The most of a kind is 1 of a kind (at index 0 / value J)	 - The most of a kind is 1 of a kind (at index 0 / value J)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT				 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: Jh 0s 9c 8s 7c 		      |	 - 5 cards used for hand: 9c 8s 7c 6c 5d 
Comparison : 							Comparison : 
--------------							--------------
Tie							      |	Hand 1 wins!
============================					============================
Testcase 6: Trying hands with flushes
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 7: Trying hands with full houses
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 8: Trying hands with 4 of a kind
Valgrind returned an error status
==3693== Memcheck, a memory error detector
==3693== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==3693== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==3693== Command: ./test-eval inp.8.txt
==3693== Parent PID: 3692
==3693== 
==3693== Use of uninitialised value of size 8
==3693==    at 0x400C02: print_hand (deck.c:19)
==3693==    by 0x4028BA: describe_hand (test-eval.c:74)
==3693==    by 0x402ABA: main (test-eval.c:119)
==3693== 
==3693== Invalid read of size 8
==3693==    at 0x400C02: print_hand (deck.c:19)
==3693==    by 0x4028BA: describe_hand (test-eval.c:74)
==3693==    by 0x402ABA: main (test-eval.c:119)
==3693==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==3693== 
==3693== 
==3693== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==3693==  Access not within mapped region at address 0x0
==3693==    at 0x400C02: print_hand (deck.c:19)
==3693==    by 0x4028BA: describe_hand (test-eval.c:74)
==3693==    by 0x402ABA: main (test-eval.c:119)
==3693==  If you believe this happened as a result of a stack
==3693==  overflow in your program's main thread (unlikely but
==3693==  possible), you can try to increase the size of the
==3693==  main thread stack using the --main-stacksize= flag.
==3693==  The main thread stack size used in this run was 8388608.
==3693== 
==3693== HEAP SUMMARY:
==3693==     in use at exit: 896 bytes in 18 blocks
==3693==   total heap usage: 150 allocs, 132 frees, 11,568 bytes allocated
==3693== 
==3693== LEAK SUMMARY:
==3693==    definitely lost: 0 bytes in 0 blocks
==3693==    indirectly lost: 0 bytes in 0 blocks
==3693==      possibly lost: 0 bytes in 0 blocks
==3693==    still reachable: 896 bytes in 18 blocks
==3693==         suppressed: 0 bytes in 0 blocks
==3693== Rerun with --leak-check=full to see details of leaked memory
==3693== 
==3693== For counts of detected and suppressed errors, rerun with: -v
==3693== Use --track-origins=yes to see where uninitialised values come from
==3693== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testcase 9: Trying hands with straight flushes
 Checking the output 
Line_31_did_not_match
Line_40_did_not_match
Line_50_did_not_match
Line_53_did_not_match
Your file did not match the expected ouput
 - Output did not match, testcase failed
Hand 1:								Hand 1:
--------							--------
As Ks Qs Js 0s 							As Ks Qs Js 0s 
 - Flush in suit s						 - Flush in suit s
 - Straight flush at index 0					 - Straight flush at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: As Ks Qs Js 0s 			 - 5 cards used for hand: As Ks Qs Js 0s 
Hand 2:								Hand 2:
--------							--------
Kh Qh Jh 0h 9h 							Kh Qh Jh 0h 9h 
 - Flush in suit h						 - Flush in suit h
 - Straight flush at index 0					 - Straight flush at index 0
 - The most of a kind is 1 of a kind (at index 0 / value K)	 - The most of a kind is 1 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: Kh Qh Jh 0h 9h 			 - 5 cards used for hand: Kh Qh Jh 0h 9h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
As Ks Qs Js 0s 9s 8s 						As Ks Qs Js 0s 9s 8s 
 - Flush in suit s						 - Flush in suit s
 - Straight flush at index 0				      <
 - Straight flush at index 1				      <
 - Straight flush at index 2					 - Straight flush at index 2
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: As Ks Qs Js 0s 		      |	 - 5 cards used for hand: Qs Js 0s 9s 8s 
Hand 2:								Hand 2:
--------							--------
Kh Qh Jh 0h 9h 8h 7h 						Kh Qh Jh 0h 9h 8h 7h 
 - Flush in suit h						 - Flush in suit h
 - Straight flush at index 0				      <
 - Straight flush at index 1				      <
 - Straight flush at index 2					 - Straight flush at index 2
 - The most of a kind is 1 of a kind (at index 0 / value K)	 - The most of a kind is 1 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: Kh Qh Jh 0h 9h 		      |	 - 5 cards used for hand: Jh 0h 9h 8h 7h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ac As Kc Ks Qs Js 0s 						Ac As Kc Ks Qs Js 0s 
 - Flush in suit s						 - Flush in suit s
 - Straight at index 0						 - Straight at index 0
 - Straight flush at index 1				      |	 - Straight at index 1
 - The most of a kind is 2 of a kind (at index 0 / value A)	 - The most of a kind is 2 of a kind (at index 0 / value A)
 - Secondary pair at index 2 (value K)				 - Secondary pair at index 2 (value K)
 - evaluate_hand's ranking: STRAIGHT_FLUSH		      |	 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: As Ks Qs Js 0s 			 - 5 cards used for hand: As Ks Qs Js 0s 
Hand 2:								Hand 2:
--------							--------
Ad Kh Qh Jh Js 0h 9h 						Ad Kh Qh Jh Js 0h 9h 
 - Flush in suit h						 - Flush in suit h
 - Straight at index 0					      <
 - Straight flush at index 1					 - Straight flush at index 1
 - The most of a kind is 2 of a kind (at index 3 / value J)	 - The most of a kind is 2 of a kind (at index 3 / value J)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: Kh Qh Jh 0h 9h 			 - 5 cards used for hand: Kh Qh Jh 0h 9h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ah Kc 5h 4h 3h 2h 						Ah Kc 5h 4h 3h 2h 
 - Flush in suit h						 - Flush in suit h
 - Straight flush at index 0					 - Straight flush at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: 5h 4h 3h 2h Ah 			 - 5 cards used for hand: 5h 4h 3h 2h Ah 
Hand 2:								Hand 2:
--------							--------
Ac 6c 5c 4c 3c 2c 						Ac 6c 5c 4c 3c 2c 
 - Flush in suit c						 - Flush in suit c
 - Straight flush at index 0					 - Straight flush at index 0
 - Straight flush at index 1					 - Straight flush at index 1
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: 5c 4c 3c 2c Ac 			 - 5 cards used for hand: 5c 4c 3c 2c Ac 
Comparison : 							Comparison : 
--------------							--------------
Tie								Tie
============================					============================
Hand 1:								Hand 1:
--------							--------
As Ks Qs Js 0s 							As Ks Qs Js 0s 
 - Flush in suit s						 - Flush in suit s
 - Straight flush at index 0					 - Straight flush at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: As Ks Qs Js 0s 			 - 5 cards used for hand: As Ks Qs Js 0s 
Hand 2:								Hand 2:
--------							--------
As 5s 4s 3s 2s 							As 5s 4s 3s 2s 
 - Flush in suit s						 - Flush in suit s
 - Straight flush at index 0					 - Straight flush at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: 5s 4s 3s 2s As 			 - 5 cards used for hand: 5s 4s 3s 2s As 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Testcase 10: Trying each type of hand ranking
Valgrind returned an error status
==3711== Memcheck, a memory error detector
==3711== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==3711== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==3711== Command: ./test-eval inp.10.txt
==3711== Parent PID: 3710
==3711== 
==3711== Use of uninitialised value of size 8
==3711==    at 0x400C02: print_hand (deck.c:19)
==3711==    by 0x4028BA: describe_hand (test-eval.c:74)
==3711==    by 0x402ABA: main (test-eval.c:119)
==3711== 
==3711== Invalid read of size 8
==3711==    at 0x400C02: print_hand (deck.c:19)
==3711==    by 0x4028BA: describe_hand (test-eval.c:74)
==3711==    by 0x402ABA: main (test-eval.c:119)
==3711==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==3711== 
==3711== 
==3711== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==3711==  Access not within mapped region at address 0x0
==3711==    at 0x400C02: print_hand (deck.c:19)
==3711==    by 0x4028BA: describe_hand (test-eval.c:74)
==3711==    by 0x402ABA: main (test-eval.c:119)
==3711==  If you believe this happened as a result of a stack
==3711==  overflow in your program's main thread (unlikely but
==3711==  possible), you can try to increase the size of the
==3711==  main thread stack using the --main-stacksize= flag.
==3711==  The main thread stack size used in this run was 8388608.
==3711== 
==3711== HEAP SUMMARY:
==3711==     in use at exit: 880 bytes in 17 blocks
==3711==   total heap usage: 210 allocs, 193 frees, 12,716 bytes allocated
==3711== 
==3711== LEAK SUMMARY:
==3711==    definitely lost: 0 bytes in 0 blocks
==3711==    indirectly lost: 0 bytes in 0 blocks
==3711==      possibly lost: 0 bytes in 0 blocks
==3711==    still reachable: 880 bytes in 17 blocks
==3711==         suppressed: 0 bytes in 0 blocks
==3711== Rerun with --leak-check=full to see details of leaked memory
==3711== 
==3711== For counts of detected and suppressed errors, rerun with: -v
==3711== Use --track-origins=yes to see where uninitialised values come from
==3711== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

Overall Grade: F
