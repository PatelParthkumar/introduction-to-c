Grading at Fri Dec 27 05:36:33 UTC 2019
Compiling your code
rm -f test poker cards.o my-test-main.o *~
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o deck.o deck.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o eval.o eval.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o cards.o cards.c
gcc -o test-eval -ggdb3 deck.o deck-c4.o eval-c4.o eval.o test-eval.o cards.o input.o future.o
Testcase 1: Trying hands with nothing
Valgrind returned an error status
==2100== Memcheck, a memory error detector
==2100== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2100== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2100== Command: ./test-eval inp.1.txt
==2100== Parent PID: 2099
==2100== 
==2100== Use of uninitialised value of size 8
==2100==    at 0x400C02: print_hand (deck.c:19)
==2100==    by 0x40293C: describe_hand (test-eval.c:74)
==2100==    by 0x402B1C: main (test-eval.c:116)
==2100== 
==2100== Invalid read of size 8
==2100==    at 0x400C02: print_hand (deck.c:19)
==2100==    by 0x40293C: describe_hand (test-eval.c:74)
==2100==    by 0x402B1C: main (test-eval.c:116)
==2100==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==2100== 
==2100== 
==2100== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2100==  Access not within mapped region at address 0x0
==2100==    at 0x400C02: print_hand (deck.c:19)
==2100==    by 0x40293C: describe_hand (test-eval.c:74)
==2100==    by 0x402B1C: main (test-eval.c:116)
==2100==  If you believe this happened as a result of a stack
==2100==  overflow in your program's main thread (unlikely but
==2100==  possible), you can try to increase the size of the
==2100==  main thread stack using the --main-stacksize= flag.
==2100==  The main thread stack size used in this run was 8388608.
==2100== 
==2100== HEAP SUMMARY:
==2100==     in use at exit: 896 bytes in 18 blocks
==2100==   total heap usage: 32 allocs, 14 frees, 9,376 bytes allocated
==2100== 
==2100== LEAK SUMMARY:
==2100==    definitely lost: 0 bytes in 0 blocks
==2100==    indirectly lost: 0 bytes in 0 blocks
==2100==      possibly lost: 0 bytes in 0 blocks
==2100==    still reachable: 896 bytes in 18 blocks
==2100==         suppressed: 0 bytes in 0 blocks
==2100== Rerun with --leak-check=full to see details of leaked memory
==2100== 
==2100== For counts of detected and suppressed errors, rerun with: -v
==2100== Use --track-origins=yes to see where uninitialised values come from
==2100== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testcase 2: Trying hands with pairs
Valgrind returned an error status
==2105== Memcheck, a memory error detector
==2105== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2105== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2105== Command: ./test-eval inp.2.txt
==2105== Parent PID: 2104
==2105== 
==2105== Use of uninitialised value of size 8
==2105==    at 0x400C02: print_hand (deck.c:19)
==2105==    by 0x40293C: describe_hand (test-eval.c:74)
==2105==    by 0x402B1C: main (test-eval.c:116)
==2105== 
==2105== Invalid read of size 8
==2105==    at 0x400C02: print_hand (deck.c:19)
==2105==    by 0x40293C: describe_hand (test-eval.c:74)
==2105==    by 0x402B1C: main (test-eval.c:116)
==2105==  Address 0x5206c70 is 0 bytes inside a block of size 24 free'd
==2105==    at 0x4C2EDEB: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==2105==    by 0x402136: evaluate_hand (eval.c:525)
==2105==    by 0x4028F1: describe_hand (test-eval.c:68)
==2105==    by 0x402B1C: main (test-eval.c:116)
==2105==  Block was alloc'd at
==2105==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==2105==    by 0x4013DE: get_match_counts (eval-c4.c:70)
==2105==    by 0x4020B4: evaluate_hand (eval.c:520)
==2105==    by 0x4028F1: describe_hand (test-eval.c:68)
==2105==    by 0x402B1C: main (test-eval.c:116)
==2105== 
==2105== 
==2105== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2105==  Access not within mapped region at address 0x0
==2105==    at 0x400C02: print_hand (deck.c:19)
==2105==    by 0x40293C: describe_hand (test-eval.c:74)
==2105==    by 0x402B1C: main (test-eval.c:116)
==2105==  If you believe this happened as a result of a stack
==2105==  overflow in your program's main thread (unlikely but
==2105==  possible), you can try to increase the size of the
==2105==  main thread stack using the --main-stacksize= flag.
==2105==  The main thread stack size used in this run was 8388608.
==2105== 
==2105== HEAP SUMMARY:
==2105==     in use at exit: 880 bytes in 17 blocks
==2105==   total heap usage: 30 allocs, 13 frees, 9,320 bytes allocated
==2105== 
==2105== LEAK SUMMARY:
==2105==    definitely lost: 0 bytes in 0 blocks
==2105==    indirectly lost: 0 bytes in 0 blocks
==2105==      possibly lost: 0 bytes in 0 blocks
==2105==    still reachable: 880 bytes in 17 blocks
==2105==         suppressed: 0 bytes in 0 blocks
==2105== Rerun with --leak-check=full to see details of leaked memory
==2105== 
==2105== For counts of detected and suppressed errors, rerun with: -v
==2105== Use --track-origins=yes to see where uninitialised values come from
==2105== ERROR SUMMARY: 4 errors from 2 contexts (suppressed: 0 from 0)
Testcase 3: Trying hands with 2 pairs
 Checking the output 
Line_19_did_not_match
Line_39_did_not_match
Line_88_did_not_match
Line_96_did_not_match
Line_99_did_not_match
Line_108_did_not_match
Line_116_did_not_match
Line_139_did_not_match
Line_179_did_not_match
Line_199_did_not_match
Your file did not match the expected ouput
 - Output did not match, testcase failed
Hand 1:								Hand 1:
--------							--------
Ac As Kc Kh 4d 							Ac As Kc Kh 4d 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value A)	 - The most of a kind is 2 of a kind (at index 0 / value A)
 - Secondary pair at index 2 (value K)				 - Secondary pair at index 2 (value K)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Ac As Kc Kh 4d 			 - 5 cards used for hand: Ac As Kc Kh 4d 
Hand 2:								Hand 2:
--------							--------
Ad Ah Kd Ks 3h 							Ad Ah Kd Ks 3h 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value A)	 - The most of a kind is 2 of a kind (at index 0 / value A)
 - Secondary pair at index 2 (value K)				 - Secondary pair at index 2 (value K)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Ad Ah Kd Ks 3h 			 - 5 cards used for hand: Ad Ah Kd Ks 3h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!						      |	Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ac As Kc Kh 4d 							Ac As Kc Kh 4d 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value A)	 - The most of a kind is 2 of a kind (at index 0 / value A)
 - Secondary pair at index 2 (value K)				 - Secondary pair at index 2 (value K)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Ac As Kc Kh 4d 			 - 5 cards used for hand: Ac As Kc Kh 4d 
Hand 2:								Hand 2:
--------							--------
Ad Ah Qd Qs 3h 							Ad Ah Qd Qs 3h 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value A)	 - The most of a kind is 2 of a kind (at index 0 / value A)
 - Secondary pair at index 2 (value Q)				 - Secondary pair at index 2 (value Q)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Ad Ah Qd Qs 3h 			 - 5 cards used for hand: Ad Ah Qd Qs 3h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!						      |	Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Kc Ks Qc Qh 4d 							Kc Ks Qc Qh 4d 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value K)	 - The most of a kind is 2 of a kind (at index 0 / value K)
 - Secondary pair at index 2 (value Q)				 - Secondary pair at index 2 (value Q)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Kc Ks Qc Qh 4d 			 - 5 cards used for hand: Kc Ks Qc Qh 4d 
Hand 2:								Hand 2:
--------							--------
Ad Ah Jd Js 3h 							Ad Ah Jd Js 3h 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value A)	 - The most of a kind is 2 of a kind (at index 0 / value A)
 - Secondary pair at index 2 (value J)				 - Secondary pair at index 2 (value J)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Ad Ah Jd Js 3h 			 - 5 cards used for hand: Ad Ah Jd Js 3h 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Kc Ks Qc Qh 4d 							Kc Ks Qc Qh 4d 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value K)	 - The most of a kind is 2 of a kind (at index 0 / value K)
 - Secondary pair at index 2 (value Q)				 - Secondary pair at index 2 (value Q)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Kc Ks Qc Qh 4d 			 - 5 cards used for hand: Kc Ks Qc Qh 4d 
Hand 2:								Hand 2:
--------							--------
Ad Ah Qd Qs 3h 							Ad Ah Qd Qs 3h 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value A)	 - The most of a kind is 2 of a kind (at index 0 / value A)
 - Secondary pair at index 2 (value Q)				 - Secondary pair at index 2 (value Q)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Ad Ah Qd Qs 3h 			 - 5 cards used for hand: Ad Ah Qd Qs 3h 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Js 7c 7h 4s 3d 3h 						Js 7c 7h 4s 3d 3h 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 1 / value 7)	 - The most of a kind is 2 of a kind (at index 1 / value 7)
 - Secondary pair at index 4 (value 3)				 - Secondary pair at index 4 (value 3)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: 7c 7h 3d 3h Js 		      |	 - 5 cards used for hand: 7c 4s 3d 3h Js 
Hand 2:								Hand 2:
--------							--------
Qs 7d 7s 5c 2d 2h 						Qs 7d 7s 5c 2d 2h 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 1 / value 7)	 - The most of a kind is 2 of a kind (at index 1 / value 7)
 - Secondary pair at index 4 (value 2)				 - Secondary pair at index 4 (value 2)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: 7d 7s 2d 2h Qs 		      |	 - 5 cards used for hand: 7d 5c 2d 2h Qs 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!						      |	Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Js 7c 7h 4s 3d 3h 						Js 7c 7h 4s 3d 3h 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 1 / value 7)	 - The most of a kind is 2 of a kind (at index 1 / value 7)
 - Secondary pair at index 4 (value 3)				 - Secondary pair at index 4 (value 3)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: 7c 7h 3d 3h Js 		      |	 - 5 cards used for hand: 7c 4s 3d 3h Js 
Hand 2:								Hand 2:
--------							--------
Qs 8d 8s 5c 2d 2h 						Qs 8d 8s 5c 2d 2h 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 1 / value 8)	 - The most of a kind is 2 of a kind (at index 1 / value 8)
 - Secondary pair at index 4 (value 2)				 - Secondary pair at index 4 (value 2)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: 8d 8s 2d 2h Qs 		      |	 - 5 cards used for hand: 8d 5c 2d 2h Qs 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Jc Js 9d 5c 5s 4h 						Jc Js 9d 5c 5s 4h 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value J)	 - The most of a kind is 2 of a kind (at index 0 / value J)
 - Secondary pair at index 3 (value 5)				 - Secondary pair at index 3 (value 5)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Jc Js 5c 5s 9d 			 - 5 cards used for hand: Jc Js 5c 5s 9d 
Hand 2:								Hand 2:
--------							--------
Jc Js 9d 4c 4s 3h 						Jc Js 9d 4c 4s 3h 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value J)	 - The most of a kind is 2 of a kind (at index 0 / value J)
 - Secondary pair at index 3 (value 4)				 - Secondary pair at index 3 (value 4)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Jc Js 4c 4s 9d 			 - 5 cards used for hand: Jc Js 4c 4s 9d 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!						      |	Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Jc Js 9d 5c 5s 4h 						Jc Js 9d 5c 5s 4h 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value J)	 - The most of a kind is 2 of a kind (at index 0 / value J)
 - Secondary pair at index 3 (value 5)				 - Secondary pair at index 3 (value 5)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Jc Js 5c 5s 9d 			 - 5 cards used for hand: Jc Js 5c 5s 9d 
Hand 2:								Hand 2:
--------							--------
Qc Qs 9d 5c 5s 3h 						Qc Qs 9d 5c 5s 3h 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value Q)	 - The most of a kind is 2 of a kind (at index 0 / value Q)
 - Secondary pair at index 3 (value 5)				 - Secondary pair at index 3 (value 5)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Qc Qs 5c 5s 9d 			 - 5 cards used for hand: Qc Qs 5c 5s 9d 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Jc Js 9d 5c 5s 4h 						Jc Js 9d 5c 5s 4h 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value J)	 - The most of a kind is 2 of a kind (at index 0 / value J)
 - Secondary pair at index 3 (value 5)				 - Secondary pair at index 3 (value 5)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Jc Js 5c 5s 9d 			 - 5 cards used for hand: Jc Js 5c 5s 9d 
Hand 2:								Hand 2:
--------							--------
Jc Js 8d 5c 5s 3h 						Jc Js 8d 5c 5s 3h 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value J)	 - The most of a kind is 2 of a kind (at index 0 / value J)
 - Secondary pair at index 3 (value 5)				 - Secondary pair at index 3 (value 5)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Jc Js 5c 5s 8d 			 - 5 cards used for hand: Jc Js 5c 5s 8d 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!						      |	Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ac As Kc Kh 4d 							Ac As Kc Kh 4d 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value A)	 - The most of a kind is 2 of a kind (at index 0 / value A)
 - Secondary pair at index 2 (value K)				 - Secondary pair at index 2 (value K)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Ac As Kc Kh 4d 			 - 5 cards used for hand: Ac As Kc Kh 4d 
Hand 2:								Hand 2:
--------							--------
Jc Js 8d 5c 5s 							Jc Js 8d 5c 5s 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value J)	 - The most of a kind is 2 of a kind (at index 0 / value J)
 - Secondary pair at index 3 (value 5)				 - Secondary pair at index 3 (value 5)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Jc Js 5c 5s 8d 			 - 5 cards used for hand: Jc Js 5c 5s 8d 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!						      |	Hand 2 wins!
============================					============================
Testcase 4: Trying hands with 3 of a kind
Valgrind returned an error status
==2123== Memcheck, a memory error detector
==2123== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2123== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2123== Command: ./test-eval inp.4.txt
==2123== Parent PID: 2122
==2123== 
==2123== Use of uninitialised value of size 8
==2123==    at 0x400C02: print_hand (deck.c:19)
==2123==    by 0x40293C: describe_hand (test-eval.c:74)
==2123==    by 0x402B1C: main (test-eval.c:116)
==2123== 
==2123== Invalid read of size 8
==2123==    at 0x400C02: print_hand (deck.c:19)
==2123==    by 0x40293C: describe_hand (test-eval.c:74)
==2123==    by 0x402B1C: main (test-eval.c:116)
==2123==  Address 0x5206d30 is 0 bytes inside a block of size 24 free'd
==2123==    at 0x4C2EDEB: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==2123==    by 0x402136: evaluate_hand (eval.c:525)
==2123==    by 0x4028F1: describe_hand (test-eval.c:68)
==2123==    by 0x402B1C: main (test-eval.c:116)
==2123==  Block was alloc'd at
==2123==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==2123==    by 0x4013DE: get_match_counts (eval-c4.c:70)
==2123==    by 0x4020B4: evaluate_hand (eval.c:520)
==2123==    by 0x4028F1: describe_hand (test-eval.c:68)
==2123==    by 0x402B1C: main (test-eval.c:116)
==2123== 
==2123== 
==2123== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2123==  Access not within mapped region at address 0x0
==2123==    at 0x400C02: print_hand (deck.c:19)
==2123==    by 0x40293C: describe_hand (test-eval.c:74)
==2123==    by 0x402B1C: main (test-eval.c:116)
==2123==  If you believe this happened as a result of a stack
==2123==  overflow in your program's main thread (unlikely but
==2123==  possible), you can try to increase the size of the
==2123==  main thread stack using the --main-stacksize= flag.
==2123==  The main thread stack size used in this run was 8388608.
==2123== 
==2123== HEAP SUMMARY:
==2123==     in use at exit: 896 bytes in 18 blocks
==2123==   total heap usage: 32 allocs, 14 frees, 9,376 bytes allocated
==2123== 
==2123== LEAK SUMMARY:
==2123==    definitely lost: 0 bytes in 0 blocks
==2123==    indirectly lost: 0 bytes in 0 blocks
==2123==      possibly lost: 0 bytes in 0 blocks
==2123==    still reachable: 896 bytes in 18 blocks
==2123==         suppressed: 0 bytes in 0 blocks
==2123== Rerun with --leak-check=full to see details of leaked memory
==2123== 
==2123== For counts of detected and suppressed errors, rerun with: -v
==2123== Use --track-origins=yes to see where uninitialised values come from
==2123== ERROR SUMMARY: 4 errors from 2 contexts (suppressed: 0 from 0)
Testcase 5: Trying hands with straights
 Checking the output 
Line_27_did_not_match
Line_30_did_not_match
Your file did not match the expected ouput
 - Output did not match, testcase failed
Hand 1:								Hand 1:
--------							--------
0s 9s 8c 7h 6d 							0s 9s 8c 7h 6d 
 - No flush							 - No flush
 - Straight at index 0						 - Straight at index 0
 - The most of a kind is 1 of a kind (at index 0 / value 0)	 - The most of a kind is 1 of a kind (at index 0 / value 0)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT				 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: 0s 9s 8c 7h 6d 			 - 5 cards used for hand: 0s 9s 8c 7h 6d 
Hand 2:								Hand 2:
--------							--------
Js 0c 9s 8d 7c 							Js 0c 9s 8d 7c 
 - No flush							 - No flush
 - Straight at index 0						 - Straight at index 0
 - The most of a kind is 1 of a kind (at index 0 / value J)	 - The most of a kind is 1 of a kind (at index 0 / value J)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT				 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: Js 0c 9s 8d 7c 			 - 5 cards used for hand: Js 0c 9s 8d 7c 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
As 5c 4h 3s 2c 							As 5c 4h 3s 2c 
 - No flush							 - No flush
 - Straight at index 0					      |	Trying for an ace-low straight - Straight at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT			      /	Trying for an ace-low straight
 - 5 cards used for hand: 5c 4h 3s 2c As 		      <
Hand 2:							      <
--------						      <
6c 5h 4s 3s 2d 						      <
 - No flush						      <
 - Straight at index 0					      <
 - The most of a kind is 1 of a kind (at index 0 / value 6)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: STRAIGHT			      <
 - 5 cards used for hand: 6c 5h 4s 3s 2d 		      <
Comparison : 						      <
--------------						      <
Hand 2 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Qh Qs Jd Js 0c 0s 9d 8c 				      <
 - No flush						      <
 - Straight at index 0					      <
 - Straight at index 1					      <
 - The most of a kind is 2 of a kind (at index 0 / value Q)   <
 - Secondary pair at index 2 (value J)			      <
 - evaluate_hand's ranking: STRAIGHT			      <
 - 5 cards used for hand: Qh Jd 0c 9d 8c 		      <
Hand 2:							      <
--------						      <
Kc Qh Qs Jd Js 0c 0s 9d 				      <
 - No flush						      <
 - Straight at index 0					      <
 - The most of a kind is 2 of a kind (at index 1 / value Q)   <
 - Secondary pair at index 3 (value J)			      <
 - evaluate_hand's ranking: STRAIGHT			      <
 - 5 cards used for hand: Kc Qh Jd 0c 9d 		      <
Comparison : 						      <
--------------						      <
Hand 2 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
As Jd 9h 8c 7d 6c 5d 					      <
 - No flush						      <
 - Straight at index 2					      <
 - The most of a kind is 1 of a kind (at index 0 / value A)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: STRAIGHT			      <
 - 5 cards used for hand: 9h 8c 7d 6c 5d 		      <
Hand 2:							      <
--------						      <
Kc Qh 8c 7h 6c 5d 4s 					      <
 - No flush						      <
 - Straight at index 2					      <
 - The most of a kind is 1 of a kind (at index 0 / value K)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: STRAIGHT			      <
 - 5 cards used for hand: 8c 7h 6c 5d 4s 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
As Kd Qs Jd 0s 						      <
 - No flush						      <
 - Straight at index 0					      <
 - The most of a kind is 1 of a kind (at index 0 / value A)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: STRAIGHT			      <
 - 5 cards used for hand: As Kd Qs Jd 0s 		      <
Hand 2:							      <
--------						      <
Ac 5s 4c 3s 2s 						      <
 - No flush						      <
 - Straight at index 0					      <
 - The most of a kind is 1 of a kind (at index 0 / value A)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: STRAIGHT			      <
 - 5 cards used for hand: 5s 4c 3s 2s Ac 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Jh 0s 9c 8s 7c 4c 3d 					      <
 - No flush						      <
 - Straight at index 0					      <
 - The most of a kind is 1 of a kind (at index 0 / value J)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: STRAIGHT			      <
 - 5 cards used for hand: Jh 0s 9c 8s 7c 		      <
Hand 2:							      <
--------						      <
Jh 0s 9c 8s 7c 6c 5d 					      <
 - No flush						      <
 - Straight at index 0					      <
 - Straight at index 1					      <
 - Straight at index 2					      <
 - The most of a kind is 1 of a kind (at index 0 / value J)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: STRAIGHT			      <
 - 5 cards used for hand: Jh 0s 9c 8s 7c 		      <
Comparison : 						      <
--------------						      <
Tie							      <
============================				      <
Testcase 6: Trying hands with flushes
Valgrind returned an error status
==2141== Memcheck, a memory error detector
==2141== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2141== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2141== Command: ./test-eval inp.6.txt
==2141== Parent PID: 2140
==2141== 
==2141== Use of uninitialised value of size 8
==2141==    at 0x400C02: print_hand (deck.c:19)
==2141==    by 0x40293C: describe_hand (test-eval.c:74)
==2141==    by 0x402B1C: main (test-eval.c:116)
==2141== 
==2141== Invalid read of size 8
==2141==    at 0x400C02: print_hand (deck.c:19)
==2141==    by 0x40293C: describe_hand (test-eval.c:74)
==2141==    by 0x402B1C: main (test-eval.c:116)
==2141==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==2141== 
==2141== 
==2141== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2141==  Access not within mapped region at address 0x0
==2141==    at 0x400C02: print_hand (deck.c:19)
==2141==    by 0x40293C: describe_hand (test-eval.c:74)
==2141==    by 0x402B1C: main (test-eval.c:116)
==2141==  If you believe this happened as a result of a stack
==2141==  overflow in your program's main thread (unlikely but
==2141==  possible), you can try to increase the size of the
==2141==  main thread stack using the --main-stacksize= flag.
==2141==  The main thread stack size used in this run was 8388608.
==2141== 
==2141== HEAP SUMMARY:
==2141==     in use at exit: 896 bytes in 18 blocks
==2141==   total heap usage: 90 allocs, 72 frees, 10,448 bytes allocated
==2141== 
==2141== LEAK SUMMARY:
==2141==    definitely lost: 0 bytes in 0 blocks
==2141==    indirectly lost: 0 bytes in 0 blocks
==2141==      possibly lost: 0 bytes in 0 blocks
==2141==    still reachable: 896 bytes in 18 blocks
==2141==         suppressed: 0 bytes in 0 blocks
==2141== Rerun with --leak-check=full to see details of leaked memory
==2141== 
==2141== For counts of detected and suppressed errors, rerun with: -v
==2141== Use --track-origins=yes to see where uninitialised values come from
==2141== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testcase 7: Trying hands with full houses
Valgrind returned an error status
==2146== Memcheck, a memory error detector
==2146== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2146== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2146== Command: ./test-eval inp.7.txt
==2146== Parent PID: 2145
==2146== 
==2146== Use of uninitialised value of size 8
==2146==    at 0x400C02: print_hand (deck.c:19)
==2146==    by 0x40293C: describe_hand (test-eval.c:74)
==2146==    by 0x402B1C: main (test-eval.c:116)
==2146== 
==2146== Invalid read of size 8
==2146==    at 0x400C02: print_hand (deck.c:19)
==2146==    by 0x40293C: describe_hand (test-eval.c:74)
==2146==    by 0x402B1C: main (test-eval.c:116)
==2146==  Address 0x380512a0 is in the Text segment of /usr/lib/valgrind/memcheck-amd64-linux
==2146==    at 0x380512A0: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==2146== 
==2146== 
==2146== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2146==  Access not within mapped region at address 0x18
==2146==    at 0x400C02: print_hand (deck.c:19)
==2146==    by 0x40293C: describe_hand (test-eval.c:74)
==2146==    by 0x402B1C: main (test-eval.c:116)
==2146==  If you believe this happened as a result of a stack
==2146==  overflow in your program's main thread (unlikely but
==2146==  possible), you can try to increase the size of the
==2146==  main thread stack using the --main-stacksize= flag.
==2146==  The main thread stack size used in this run was 8388608.
==2146== 
==2146== HEAP SUMMARY:
==2146==     in use at exit: 912 bytes in 19 blocks
==2146==   total heap usage: 480 allocs, 461 frees, 18,344 bytes allocated
==2146== 
==2146== LEAK SUMMARY:
==2146==    definitely lost: 0 bytes in 0 blocks
==2146==    indirectly lost: 0 bytes in 0 blocks
==2146==      possibly lost: 0 bytes in 0 blocks
==2146==    still reachable: 912 bytes in 19 blocks
==2146==         suppressed: 0 bytes in 0 blocks
==2146== Rerun with --leak-check=full to see details of leaked memory
==2146== 
==2146== For counts of detected and suppressed errors, rerun with: -v
==2146== Use --track-origins=yes to see where uninitialised values come from
==2146== ERROR SUMMARY: 6 errors from 2 contexts (suppressed: 0 from 0)
Testcase 8: Trying hands with 4 of a kind
Valgrind returned an error status
==2151== Memcheck, a memory error detector
==2151== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2151== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2151== Command: ./test-eval inp.8.txt
==2151== Parent PID: 2150
==2151== 
==2151== Use of uninitialised value of size 8
==2151==    at 0x400C02: print_hand (deck.c:19)
==2151==    by 0x40293C: describe_hand (test-eval.c:74)
==2151==    by 0x402B1C: main (test-eval.c:116)
==2151== 
==2151== Invalid read of size 8
==2151==    at 0x400C02: print_hand (deck.c:19)
==2151==    by 0x40293C: describe_hand (test-eval.c:74)
==2151==    by 0x402B1C: main (test-eval.c:116)
==2151==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==2151== 
==2151== 
==2151== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2151==  Access not within mapped region at address 0x0
==2151==    at 0x400C02: print_hand (deck.c:19)
==2151==    by 0x40293C: describe_hand (test-eval.c:74)
==2151==    by 0x402B1C: main (test-eval.c:116)
==2151==  If you believe this happened as a result of a stack
==2151==  overflow in your program's main thread (unlikely but
==2151==  possible), you can try to increase the size of the
==2151==  main thread stack using the --main-stacksize= flag.
==2151==  The main thread stack size used in this run was 8388608.
==2151== 
==2151== HEAP SUMMARY:
==2151==     in use at exit: 896 bytes in 18 blocks
==2151==   total heap usage: 32 allocs, 14 frees, 9,376 bytes allocated
==2151== 
==2151== LEAK SUMMARY:
==2151==    definitely lost: 0 bytes in 0 blocks
==2151==    indirectly lost: 0 bytes in 0 blocks
==2151==      possibly lost: 0 bytes in 0 blocks
==2151==    still reachable: 896 bytes in 18 blocks
==2151==         suppressed: 0 bytes in 0 blocks
==2151== Rerun with --leak-check=full to see details of leaked memory
==2151== 
==2151== For counts of detected and suppressed errors, rerun with: -v
==2151== Use --track-origins=yes to see where uninitialised values come from
==2151== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testcase 9: Trying hands with straight flushes
 Checking the output 
Line_13_did_not_match
Line_14_did_not_match
Line_17_did_not_match
Line_21_did_not_match
Line_31_did_not_match
Line_35_did_not_match
Line_36_did_not_match
Line_39_did_not_match
Line_40_did_not_match
Line_43_did_not_match
Line_50_did_not_match
Line_53_did_not_match
Line_58_did_not_match
Line_59_did_not_match
Line_62_did_not_match
Line_66_did_not_match
Line_71_did_not_match
Line_72_did_not_match
Line_75_did_not_match
Your file did not match the expected ouput
 - Output did not match, testcase failed
Hand 1:								Hand 1:
--------							--------
As Ks Qs Js 0s 							As Ks Qs Js 0s 
 - Flush in suit s						 - Flush in suit s
 - Straight flush at index 0					 - Straight flush at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: As Ks Qs Js 0s 			 - 5 cards used for hand: As Ks Qs Js 0s 
Hand 2:								Hand 2:
--------							--------
Kh Qh Jh 0h 9h 							Kh Qh Jh 0h 9h 
 - Flush in suit h					      |	 - No flush
 - Straight flush at index 0				      |	 - Straight at index 0
 - The most of a kind is 1 of a kind (at index 0 / value K)	 - The most of a kind is 1 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH		      |	 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: Kh Qh Jh 0h 9h 			 - 5 cards used for hand: Kh Qh Jh 0h 9h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!						      |	Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
As Ks Qs Js 0s 9s 8s 						As Ks Qs Js 0s 9s 8s 
 - Flush in suit s						 - Flush in suit s
 - Straight flush at index 0				      <
 - Straight flush at index 1				      <
 - Straight flush at index 2					 - Straight flush at index 2
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: As Ks Qs Js 0s 		      |	 - 5 cards used for hand: Qs Js 0s 9s 8s 
Hand 2:								Hand 2:
--------							--------
Kh Qh Jh 0h 9h 8h 7h 						Kh Qh Jh 0h 9h 8h 7h 
 - Flush in suit h					      |	 - No flush
 - Straight flush at index 0				      |	 - Straight at index 2
 - Straight flush at index 1				      <
 - Straight flush at index 2				      <
 - The most of a kind is 1 of a kind (at index 0 / value K)	 - The most of a kind is 1 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH		      |	 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: Kh Qh Jh 0h 9h 		      |	 - 5 cards used for hand: Jh 0h 9h 8h 7h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!						      |	Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ac As Kc Ks Qs Js 0s 						Ac As Kc Ks Qs Js 0s 
 - Flush in suit s						 - Flush in suit s
 - Straight at index 0						 - Straight at index 0
 - Straight flush at index 1				      |	 - Straight at index 1
 - The most of a kind is 2 of a kind (at index 0 / value A)	 - The most of a kind is 2 of a kind (at index 0 / value A)
 - Secondary pair at index 2 (value K)				 - Secondary pair at index 2 (value K)
 - evaluate_hand's ranking: STRAIGHT_FLUSH		      |	 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: As Ks Qs Js 0s 			 - 5 cards used for hand: As Ks Qs Js 0s 
Hand 2:								Hand 2:
--------							--------
Ad Kh Qh Jh Js 0h 9h 						Ad Kh Qh Jh Js 0h 9h 
 - Flush in suit h					      |	 - No flush
 - Straight at index 0					      |	 - Straight at index 1
 - Straight flush at index 1				      <
 - The most of a kind is 2 of a kind (at index 3 / value J)	 - The most of a kind is 2 of a kind (at index 3 / value J)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH		      |	 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: Kh Qh Jh 0h 9h 			 - 5 cards used for hand: Kh Qh Jh 0h 9h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!						      |	Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ah Kc 5h 4h 3h 2h 						Ah Kc 5h 4h 3h 2h 
 - Flush in suit h					      |	 - No flush
 - Straight flush at index 0				      |	Trying for an ace-low straight - Straight at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: STRAIGHT_FLUSH		      <
 - 5 cards used for hand: 5h 4h 3h 2h Ah 		      <
Hand 2:							      <
--------						      <
Ac 6c 5c 4c 3c 2c 					      <
 - Flush in suit c					      <
 - Straight flush at index 0				      <
 - Straight flush at index 1				      <
 - The most of a kind is 1 of a kind (at index 0 / value A)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: STRAIGHT_FLUSH		      <
 - 5 cards used for hand: 5c 4c 3c 2c Ac 		      <
Comparison : 						      <
--------------						      <
Tie							      <
============================				      <
Hand 1:							      <
--------						      <
As Ks Qs Js 0s 						      <
 - Flush in suit s					      <
 - Straight flush at index 0				      <
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH		      /	Trying for an ace-low straight
 - 5 cards used for hand: As Ks Qs Js 0s 		      <
Hand 2:							      <
--------						      <
As 5s 4s 3s 2s 						      <
 - Flush in suit s					      <
 - Straight flush at index 0				      <
 - The most of a kind is 1 of a kind (at index 0 / value A)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: STRAIGHT_FLUSH		      <
 - 5 cards used for hand: 5s 4s 3s 2s As 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Testcase 10: Trying each type of hand ranking
Valgrind returned an error status
==2169== Memcheck, a memory error detector
==2169== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2169== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2169== Command: ./test-eval inp.10.txt
==2169== Parent PID: 2168
==2169== 
==2169== Use of uninitialised value of size 8
==2169==    at 0x400C02: print_hand (deck.c:19)
==2169==    by 0x40293C: describe_hand (test-eval.c:74)
==2169==    by 0x402B3C: main (test-eval.c:119)
==2169== 
==2169== Invalid read of size 8
==2169==    at 0x400C02: print_hand (deck.c:19)
==2169==    by 0x40293C: describe_hand (test-eval.c:74)
==2169==    by 0x402B3C: main (test-eval.c:119)
==2169==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==2169== 
==2169== 
==2169== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2169==  Access not within mapped region at address 0x0
==2169==    at 0x400C02: print_hand (deck.c:19)
==2169==    by 0x40293C: describe_hand (test-eval.c:74)
==2169==    by 0x402B3C: main (test-eval.c:119)
==2169==  If you believe this happened as a result of a stack
==2169==  overflow in your program's main thread (unlikely but
==2169==  possible), you can try to increase the size of the
==2169==  main thread stack using the --main-stacksize= flag.
==2169==  The main thread stack size used in this run was 8388608.
==2169== 
==2169== HEAP SUMMARY:
==2169==     in use at exit: 896 bytes in 18 blocks
==2169==   total heap usage: 34 allocs, 16 frees, 9,424 bytes allocated
==2169== 
==2169== LEAK SUMMARY:
==2169==    definitely lost: 0 bytes in 0 blocks
==2169==    indirectly lost: 0 bytes in 0 blocks
==2169==      possibly lost: 0 bytes in 0 blocks
==2169==    still reachable: 896 bytes in 18 blocks
==2169==         suppressed: 0 bytes in 0 blocks
==2169== Rerun with --leak-check=full to see details of leaked memory
==2169== 
==2169== For counts of detected and suppressed errors, rerun with: -v
==2169== Use --track-origins=yes to see where uninitialised values come from
==2169== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

Overall Grade: F
