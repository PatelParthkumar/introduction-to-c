Grading at Fri Dec 27 05:19:01 UTC 2019
Compiling your code
rm -f test poker cards.o my-test-main.o *~
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o deck.o deck.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o eval.o eval.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o cards.o cards.c
gcc -o test-eval -ggdb3 deck.o deck-c4.o eval-c4.o eval.o test-eval.o cards.o input.o future.o
Testcase 1: Trying hands with nothing
Valgrind returned an error status
==1776== Memcheck, a memory error detector
==1776== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1776== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1776== Command: ./test-eval inp.1.txt
==1776== Parent PID: 1775
==1776== 
==1776== Use of uninitialised value of size 8
==1776==    at 0x400C02: print_hand (deck.c:19)
==1776==    by 0x40294F: describe_hand (test-eval.c:74)
==1776==    by 0x402B2F: main (test-eval.c:116)
==1776== 
==1776== Invalid read of size 8
==1776==    at 0x400C02: print_hand (deck.c:19)
==1776==    by 0x40294F: describe_hand (test-eval.c:74)
==1776==    by 0x402B2F: main (test-eval.c:116)
==1776==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1776== 
==1776== 
==1776== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1776==  Access not within mapped region at address 0x0
==1776==    at 0x400C02: print_hand (deck.c:19)
==1776==    by 0x40294F: describe_hand (test-eval.c:74)
==1776==    by 0x402B2F: main (test-eval.c:116)
==1776==  If you believe this happened as a result of a stack
==1776==  overflow in your program's main thread (unlikely but
==1776==  possible), you can try to increase the size of the
==1776==  main thread stack using the --main-stacksize= flag.
==1776==  The main thread stack size used in this run was 8388608.
==1776== 
==1776== HEAP SUMMARY:
==1776==     in use at exit: 896 bytes in 18 blocks
==1776==   total heap usage: 32 allocs, 14 frees, 9,376 bytes allocated
==1776== 
==1776== LEAK SUMMARY:
==1776==    definitely lost: 0 bytes in 0 blocks
==1776==    indirectly lost: 0 bytes in 0 blocks
==1776==      possibly lost: 0 bytes in 0 blocks
==1776==    still reachable: 896 bytes in 18 blocks
==1776==         suppressed: 0 bytes in 0 blocks
==1776== Rerun with --leak-check=full to see details of leaked memory
==1776== 
==1776== For counts of detected and suppressed errors, rerun with: -v
==1776== Use --track-origins=yes to see where uninitialised values come from
==1776== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testcase 2: Trying hands with pairs
Valgrind returned an error status
==1781== Memcheck, a memory error detector
==1781== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1781== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1781== Command: ./test-eval inp.2.txt
==1781== Parent PID: 1780
==1781== 
==1781== Use of uninitialised value of size 8
==1781==    at 0x400C02: print_hand (deck.c:19)
==1781==    by 0x40294F: describe_hand (test-eval.c:74)
==1781==    by 0x402B2F: main (test-eval.c:116)
==1781== 
==1781== Invalid read of size 8
==1781==    at 0x400C02: print_hand (deck.c:19)
==1781==    by 0x40294F: describe_hand (test-eval.c:74)
==1781==    by 0x402B2F: main (test-eval.c:116)
==1781==  Address 0x5206c70 is 0 bytes inside a block of size 24 free'd
==1781==    at 0x4C2EDEB: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1781==    by 0x402149: evaluate_hand (eval.c:527)
==1781==    by 0x402904: describe_hand (test-eval.c:68)
==1781==    by 0x402B2F: main (test-eval.c:116)
==1781==  Block was alloc'd at
==1781==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1781==    by 0x4013DE: get_match_counts (eval-c4.c:70)
==1781==    by 0x4020C7: evaluate_hand (eval.c:522)
==1781==    by 0x402904: describe_hand (test-eval.c:68)
==1781==    by 0x402B2F: main (test-eval.c:116)
==1781== 
==1781== 
==1781== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1781==  Access not within mapped region at address 0x0
==1781==    at 0x400C02: print_hand (deck.c:19)
==1781==    by 0x40294F: describe_hand (test-eval.c:74)
==1781==    by 0x402B2F: main (test-eval.c:116)
==1781==  If you believe this happened as a result of a stack
==1781==  overflow in your program's main thread (unlikely but
==1781==  possible), you can try to increase the size of the
==1781==  main thread stack using the --main-stacksize= flag.
==1781==  The main thread stack size used in this run was 8388608.
==1781== 
==1781== HEAP SUMMARY:
==1781==     in use at exit: 880 bytes in 17 blocks
==1781==   total heap usage: 30 allocs, 13 frees, 9,320 bytes allocated
==1781== 
==1781== LEAK SUMMARY:
==1781==    definitely lost: 0 bytes in 0 blocks
==1781==    indirectly lost: 0 bytes in 0 blocks
==1781==      possibly lost: 0 bytes in 0 blocks
==1781==    still reachable: 880 bytes in 17 blocks
==1781==         suppressed: 0 bytes in 0 blocks
==1781== Rerun with --leak-check=full to see details of leaked memory
==1781== 
==1781== For counts of detected and suppressed errors, rerun with: -v
==1781== Use --track-origins=yes to see where uninitialised values come from
==1781== ERROR SUMMARY: 4 errors from 2 contexts (suppressed: 0 from 0)
Testcase 3: Trying hands with 2 pairs
 Checking the output 
Line_19_did_not_match
Line_39_did_not_match
Line_88_did_not_match
Line_96_did_not_match
Line_99_did_not_match
Line_108_did_not_match
Line_116_did_not_match
Line_139_did_not_match
Line_179_did_not_match
Line_199_did_not_match
Your file did not match the expected ouput
 - Output did not match, testcase failed
Hand 1:								Hand 1:
--------							--------
Ac As Kc Kh 4d 							Ac As Kc Kh 4d 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value A)	 - The most of a kind is 2 of a kind (at index 0 / value A)
 - Secondary pair at index 2 (value K)				 - Secondary pair at index 2 (value K)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Ac As Kc Kh 4d 			 - 5 cards used for hand: Ac As Kc Kh 4d 
Hand 2:								Hand 2:
--------							--------
Ad Ah Kd Ks 3h 							Ad Ah Kd Ks 3h 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value A)	 - The most of a kind is 2 of a kind (at index 0 / value A)
 - Secondary pair at index 2 (value K)				 - Secondary pair at index 2 (value K)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Ad Ah Kd Ks 3h 			 - 5 cards used for hand: Ad Ah Kd Ks 3h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!						      |	Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ac As Kc Kh 4d 							Ac As Kc Kh 4d 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value A)	 - The most of a kind is 2 of a kind (at index 0 / value A)
 - Secondary pair at index 2 (value K)				 - Secondary pair at index 2 (value K)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Ac As Kc Kh 4d 			 - 5 cards used for hand: Ac As Kc Kh 4d 
Hand 2:								Hand 2:
--------							--------
Ad Ah Qd Qs 3h 							Ad Ah Qd Qs 3h 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value A)	 - The most of a kind is 2 of a kind (at index 0 / value A)
 - Secondary pair at index 2 (value Q)				 - Secondary pair at index 2 (value Q)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Ad Ah Qd Qs 3h 			 - 5 cards used for hand: Ad Ah Qd Qs 3h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!						      |	Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Kc Ks Qc Qh 4d 							Kc Ks Qc Qh 4d 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value K)	 - The most of a kind is 2 of a kind (at index 0 / value K)
 - Secondary pair at index 2 (value Q)				 - Secondary pair at index 2 (value Q)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Kc Ks Qc Qh 4d 			 - 5 cards used for hand: Kc Ks Qc Qh 4d 
Hand 2:								Hand 2:
--------							--------
Ad Ah Jd Js 3h 							Ad Ah Jd Js 3h 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value A)	 - The most of a kind is 2 of a kind (at index 0 / value A)
 - Secondary pair at index 2 (value J)				 - Secondary pair at index 2 (value J)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Ad Ah Jd Js 3h 			 - 5 cards used for hand: Ad Ah Jd Js 3h 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Kc Ks Qc Qh 4d 							Kc Ks Qc Qh 4d 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value K)	 - The most of a kind is 2 of a kind (at index 0 / value K)
 - Secondary pair at index 2 (value Q)				 - Secondary pair at index 2 (value Q)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Kc Ks Qc Qh 4d 			 - 5 cards used for hand: Kc Ks Qc Qh 4d 
Hand 2:								Hand 2:
--------							--------
Ad Ah Qd Qs 3h 							Ad Ah Qd Qs 3h 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value A)	 - The most of a kind is 2 of a kind (at index 0 / value A)
 - Secondary pair at index 2 (value Q)				 - Secondary pair at index 2 (value Q)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Ad Ah Qd Qs 3h 			 - 5 cards used for hand: Ad Ah Qd Qs 3h 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Js 7c 7h 4s 3d 3h 						Js 7c 7h 4s 3d 3h 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 1 / value 7)	 - The most of a kind is 2 of a kind (at index 1 / value 7)
 - Secondary pair at index 4 (value 3)				 - Secondary pair at index 4 (value 3)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: 7c 7h 3d 3h Js 		      |	 - 5 cards used for hand: 7c 4s 3d 3h Js 
Hand 2:								Hand 2:
--------							--------
Qs 7d 7s 5c 2d 2h 						Qs 7d 7s 5c 2d 2h 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 1 / value 7)	 - The most of a kind is 2 of a kind (at index 1 / value 7)
 - Secondary pair at index 4 (value 2)				 - Secondary pair at index 4 (value 2)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: 7d 7s 2d 2h Qs 		      |	 - 5 cards used for hand: 7d 5c 2d 2h Qs 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!						      |	Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Js 7c 7h 4s 3d 3h 						Js 7c 7h 4s 3d 3h 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 1 / value 7)	 - The most of a kind is 2 of a kind (at index 1 / value 7)
 - Secondary pair at index 4 (value 3)				 - Secondary pair at index 4 (value 3)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: 7c 7h 3d 3h Js 		      |	 - 5 cards used for hand: 7c 4s 3d 3h Js 
Hand 2:								Hand 2:
--------							--------
Qs 8d 8s 5c 2d 2h 						Qs 8d 8s 5c 2d 2h 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 1 / value 8)	 - The most of a kind is 2 of a kind (at index 1 / value 8)
 - Secondary pair at index 4 (value 2)				 - Secondary pair at index 4 (value 2)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: 8d 8s 2d 2h Qs 		      |	 - 5 cards used for hand: 8d 5c 2d 2h Qs 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Jc Js 9d 5c 5s 4h 						Jc Js 9d 5c 5s 4h 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value J)	 - The most of a kind is 2 of a kind (at index 0 / value J)
 - Secondary pair at index 3 (value 5)				 - Secondary pair at index 3 (value 5)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Jc Js 5c 5s 9d 			 - 5 cards used for hand: Jc Js 5c 5s 9d 
Hand 2:								Hand 2:
--------							--------
Jc Js 9d 4c 4s 3h 						Jc Js 9d 4c 4s 3h 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value J)	 - The most of a kind is 2 of a kind (at index 0 / value J)
 - Secondary pair at index 3 (value 4)				 - Secondary pair at index 3 (value 4)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Jc Js 4c 4s 9d 			 - 5 cards used for hand: Jc Js 4c 4s 9d 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!						      |	Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Jc Js 9d 5c 5s 4h 						Jc Js 9d 5c 5s 4h 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value J)	 - The most of a kind is 2 of a kind (at index 0 / value J)
 - Secondary pair at index 3 (value 5)				 - Secondary pair at index 3 (value 5)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Jc Js 5c 5s 9d 			 - 5 cards used for hand: Jc Js 5c 5s 9d 
Hand 2:								Hand 2:
--------							--------
Qc Qs 9d 5c 5s 3h 						Qc Qs 9d 5c 5s 3h 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value Q)	 - The most of a kind is 2 of a kind (at index 0 / value Q)
 - Secondary pair at index 3 (value 5)				 - Secondary pair at index 3 (value 5)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Qc Qs 5c 5s 9d 			 - 5 cards used for hand: Qc Qs 5c 5s 9d 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Jc Js 9d 5c 5s 4h 						Jc Js 9d 5c 5s 4h 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value J)	 - The most of a kind is 2 of a kind (at index 0 / value J)
 - Secondary pair at index 3 (value 5)				 - Secondary pair at index 3 (value 5)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Jc Js 5c 5s 9d 			 - 5 cards used for hand: Jc Js 5c 5s 9d 
Hand 2:								Hand 2:
--------							--------
Jc Js 8d 5c 5s 3h 						Jc Js 8d 5c 5s 3h 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value J)	 - The most of a kind is 2 of a kind (at index 0 / value J)
 - Secondary pair at index 3 (value 5)				 - Secondary pair at index 3 (value 5)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Jc Js 5c 5s 8d 			 - 5 cards used for hand: Jc Js 5c 5s 8d 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!						      |	Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ac As Kc Kh 4d 							Ac As Kc Kh 4d 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value A)	 - The most of a kind is 2 of a kind (at index 0 / value A)
 - Secondary pair at index 2 (value K)				 - Secondary pair at index 2 (value K)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Ac As Kc Kh 4d 			 - 5 cards used for hand: Ac As Kc Kh 4d 
Hand 2:								Hand 2:
--------							--------
Jc Js 8d 5c 5s 							Jc Js 8d 5c 5s 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value J)	 - The most of a kind is 2 of a kind (at index 0 / value J)
 - Secondary pair at index 3 (value 5)				 - Secondary pair at index 3 (value 5)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Jc Js 5c 5s 8d 			 - 5 cards used for hand: Jc Js 5c 5s 8d 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!						      |	Hand 2 wins!
============================					============================
Testcase 4: Trying hands with 3 of a kind
Valgrind returned an error status
==1799== Memcheck, a memory error detector
==1799== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1799== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1799== Command: ./test-eval inp.4.txt
==1799== Parent PID: 1798
==1799== 
==1799== Use of uninitialised value of size 8
==1799==    at 0x400C02: print_hand (deck.c:19)
==1799==    by 0x40294F: describe_hand (test-eval.c:74)
==1799==    by 0x402B2F: main (test-eval.c:116)
==1799== 
==1799== Invalid read of size 8
==1799==    at 0x400C02: print_hand (deck.c:19)
==1799==    by 0x40294F: describe_hand (test-eval.c:74)
==1799==    by 0x402B2F: main (test-eval.c:116)
==1799==  Address 0x5206d30 is 0 bytes inside a block of size 24 free'd
==1799==    at 0x4C2EDEB: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1799==    by 0x402149: evaluate_hand (eval.c:527)
==1799==    by 0x402904: describe_hand (test-eval.c:68)
==1799==    by 0x402B2F: main (test-eval.c:116)
==1799==  Block was alloc'd at
==1799==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1799==    by 0x4013DE: get_match_counts (eval-c4.c:70)
==1799==    by 0x4020C7: evaluate_hand (eval.c:522)
==1799==    by 0x402904: describe_hand (test-eval.c:68)
==1799==    by 0x402B2F: main (test-eval.c:116)
==1799== 
==1799== 
==1799== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1799==  Access not within mapped region at address 0x0
==1799==    at 0x400C02: print_hand (deck.c:19)
==1799==    by 0x40294F: describe_hand (test-eval.c:74)
==1799==    by 0x402B2F: main (test-eval.c:116)
==1799==  If you believe this happened as a result of a stack
==1799==  overflow in your program's main thread (unlikely but
==1799==  possible), you can try to increase the size of the
==1799==  main thread stack using the --main-stacksize= flag.
==1799==  The main thread stack size used in this run was 8388608.
==1799== 
==1799== HEAP SUMMARY:
==1799==     in use at exit: 896 bytes in 18 blocks
==1799==   total heap usage: 32 allocs, 14 frees, 9,376 bytes allocated
==1799== 
==1799== LEAK SUMMARY:
==1799==    definitely lost: 0 bytes in 0 blocks
==1799==    indirectly lost: 0 bytes in 0 blocks
==1799==      possibly lost: 0 bytes in 0 blocks
==1799==    still reachable: 896 bytes in 18 blocks
==1799==         suppressed: 0 bytes in 0 blocks
==1799== Rerun with --leak-check=full to see details of leaked memory
==1799== 
==1799== For counts of detected and suppressed errors, rerun with: -v
==1799== Use --track-origins=yes to see where uninitialised values come from
==1799== ERROR SUMMARY: 4 errors from 2 contexts (suppressed: 0 from 0)
Testcase 5: Trying hands with straights
 Checking the output 
Your file did not match the expected ouput
 - Output did not match, testcase failed
Hand 1:								Hand 1:
--------							--------
0s 9s 8c 7h 6d 							0s 9s 8c 7h 6d 
 - No flush							 - No flush
 - Straight at index 0						 - Straight at index 0
 - The most of a kind is 1 of a kind (at index 0 / value 0)	 - The most of a kind is 1 of a kind (at index 0 / value 0)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT				 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: 0s 9s 8c 7h 6d 			 - 5 cards used for hand: 0s 9s 8c 7h 6d 
Hand 2:								Hand 2:
--------							--------
Js 0c 9s 8d 7c 							Js 0c 9s 8d 7c 
 - No flush							 - No flush
 - Straight at index 0						 - Straight at index 0
 - The most of a kind is 1 of a kind (at index 0 / value J)	 - The most of a kind is 1 of a kind (at index 0 / value J)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT				 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: Js 0c 9s 8d 7c 			 - 5 cards used for hand: Js 0c 9s 8d 7c 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
As 5c 4h 3s 2c 							As 5c 4h 3s 2c 
 - No flush							 - No flush
 - Straight at index 0						 - Straight at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT			      <
 - 5 cards used for hand: 5c 4h 3s 2c As 		      <
Hand 2:							      <
--------						      <
6c 5h 4s 3s 2d 						      <
 - No flush						      <
 - Straight at index 0					      <
 - The most of a kind is 1 of a kind (at index 0 / value 6)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: STRAIGHT			      <
 - 5 cards used for hand: 6c 5h 4s 3s 2d 		      <
Comparison : 						      <
--------------						      <
Hand 2 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Qh Qs Jd Js 0c 0s 9d 8c 				      <
 - No flush						      <
 - Straight at index 0					      <
 - Straight at index 1					      <
 - The most of a kind is 2 of a kind (at index 0 / value Q)   <
 - Secondary pair at index 2 (value J)			      <
 - evaluate_hand's ranking: STRAIGHT			      <
 - 5 cards used for hand: Qh Jd 0c 9d 8c 		      <
Hand 2:							      <
--------						      <
Kc Qh Qs Jd Js 0c 0s 9d 				      <
 - No flush						      <
 - Straight at index 0					      <
 - The most of a kind is 2 of a kind (at index 1 / value Q)   <
 - Secondary pair at index 3 (value J)			      <
 - evaluate_hand's ranking: STRAIGHT			      <
 - 5 cards used for hand: Kc Qh Jd 0c 9d 		      <
Comparison : 						      <
--------------						      <
Hand 2 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
As Jd 9h 8c 7d 6c 5d 					      <
 - No flush						      <
 - Straight at index 2					      <
 - The most of a kind is 1 of a kind (at index 0 / value A)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: STRAIGHT			      <
 - 5 cards used for hand: 9h 8c 7d 6c 5d 		      <
Hand 2:							      <
--------						      <
Kc Qh 8c 7h 6c 5d 4s 					      <
 - No flush						      <
 - Straight at index 2					      <
 - The most of a kind is 1 of a kind (at index 0 / value K)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: STRAIGHT			      <
 - 5 cards used for hand: 8c 7h 6c 5d 4s 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
As Kd Qs Jd 0s 						      <
 - No flush						      <
 - Straight at index 0					      <
 - The most of a kind is 1 of a kind (at index 0 / value A)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: STRAIGHT			      <
 - 5 cards used for hand: As Kd Qs Jd 0s 		      <
Hand 2:							      <
--------						      <
Ac 5s 4c 3s 2s 						      <
 - No flush						      <
 - Straight at index 0					      <
 - The most of a kind is 1 of a kind (at index 0 / value A)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: STRAIGHT			      <
 - 5 cards used for hand: 5s 4c 3s 2s Ac 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Jh 0s 9c 8s 7c 4c 3d 					      <
 - No flush						      <
 - Straight at index 0					      <
 - The most of a kind is 1 of a kind (at index 0 / value J)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: STRAIGHT			      <
 - 5 cards used for hand: Jh 0s 9c 8s 7c 		      <
Hand 2:							      <
--------						      <
Jh 0s 9c 8s 7c 6c 5d 					      <
 - No flush						      <
 - Straight at index 0					      <
 - Straight at index 1					      <
 - Straight at index 2					      <
 - The most of a kind is 1 of a kind (at index 0 / value J)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: STRAIGHT			      <
 - 5 cards used for hand: Jh 0s 9c 8s 7c 		      <
Comparison : 						      <
--------------						      <
Tie							      <
============================				      <
Testcase 6: Trying hands with flushes
Valgrind returned an error status
==1817== Memcheck, a memory error detector
==1817== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1817== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1817== Command: ./test-eval inp.6.txt
==1817== Parent PID: 1816
==1817== 
==1817== Use of uninitialised value of size 8
==1817==    at 0x400C02: print_hand (deck.c:19)
==1817==    by 0x40294F: describe_hand (test-eval.c:74)
==1817==    by 0x402B2F: main (test-eval.c:116)
==1817== 
==1817== Invalid read of size 8
==1817==    at 0x400C02: print_hand (deck.c:19)
==1817==    by 0x40294F: describe_hand (test-eval.c:74)
==1817==    by 0x402B2F: main (test-eval.c:116)
==1817==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1817== 
==1817== 
==1817== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1817==  Access not within mapped region at address 0x0
==1817==    at 0x400C02: print_hand (deck.c:19)
==1817==    by 0x40294F: describe_hand (test-eval.c:74)
==1817==    by 0x402B2F: main (test-eval.c:116)
==1817==  If you believe this happened as a result of a stack
==1817==  overflow in your program's main thread (unlikely but
==1817==  possible), you can try to increase the size of the
==1817==  main thread stack using the --main-stacksize= flag.
==1817==  The main thread stack size used in this run was 8388608.
==1817== 
==1817== HEAP SUMMARY:
==1817==     in use at exit: 896 bytes in 18 blocks
==1817==   total heap usage: 90 allocs, 72 frees, 10,448 bytes allocated
==1817== 
==1817== LEAK SUMMARY:
==1817==    definitely lost: 0 bytes in 0 blocks
==1817==    indirectly lost: 0 bytes in 0 blocks
==1817==      possibly lost: 0 bytes in 0 blocks
==1817==    still reachable: 896 bytes in 18 blocks
==1817==         suppressed: 0 bytes in 0 blocks
==1817== Rerun with --leak-check=full to see details of leaked memory
==1817== 
==1817== For counts of detected and suppressed errors, rerun with: -v
==1817== Use --track-origins=yes to see where uninitialised values come from
==1817== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testcase 7: Trying hands with full houses
Valgrind returned an error status
==1822== Memcheck, a memory error detector
==1822== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1822== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1822== Command: ./test-eval inp.7.txt
==1822== Parent PID: 1821
==1822== 
==1822== Use of uninitialised value of size 8
==1822==    at 0x400C02: print_hand (deck.c:19)
==1822==    by 0x40294F: describe_hand (test-eval.c:74)
==1822==    by 0x402B2F: main (test-eval.c:116)
==1822== 
==1822== Invalid read of size 8
==1822==    at 0x400C02: print_hand (deck.c:19)
==1822==    by 0x40294F: describe_hand (test-eval.c:74)
==1822==    by 0x402B2F: main (test-eval.c:116)
==1822==  Address 0x380512a0 is in the Text segment of /usr/lib/valgrind/memcheck-amd64-linux
==1822==    at 0x380512A0: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==1822== 
==1822== 
==1822== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1822==  Access not within mapped region at address 0x18
==1822==    at 0x400C02: print_hand (deck.c:19)
==1822==    by 0x40294F: describe_hand (test-eval.c:74)
==1822==    by 0x402B2F: main (test-eval.c:116)
==1822==  If you believe this happened as a result of a stack
==1822==  overflow in your program's main thread (unlikely but
==1822==  possible), you can try to increase the size of the
==1822==  main thread stack using the --main-stacksize= flag.
==1822==  The main thread stack size used in this run was 8388608.
==1822== 
==1822== HEAP SUMMARY:
==1822==     in use at exit: 912 bytes in 19 blocks
==1822==   total heap usage: 480 allocs, 461 frees, 18,344 bytes allocated
==1822== 
==1822== LEAK SUMMARY:
==1822==    definitely lost: 0 bytes in 0 blocks
==1822==    indirectly lost: 0 bytes in 0 blocks
==1822==      possibly lost: 0 bytes in 0 blocks
==1822==    still reachable: 912 bytes in 19 blocks
==1822==         suppressed: 0 bytes in 0 blocks
==1822== Rerun with --leak-check=full to see details of leaked memory
==1822== 
==1822== For counts of detected and suppressed errors, rerun with: -v
==1822== Use --track-origins=yes to see where uninitialised values come from
==1822== ERROR SUMMARY: 6 errors from 2 contexts (suppressed: 0 from 0)
Testcase 8: Trying hands with 4 of a kind
Valgrind returned an error status
==1827== Memcheck, a memory error detector
==1827== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1827== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1827== Command: ./test-eval inp.8.txt
==1827== Parent PID: 1826
==1827== 
==1827== Use of uninitialised value of size 8
==1827==    at 0x400C02: print_hand (deck.c:19)
==1827==    by 0x40294F: describe_hand (test-eval.c:74)
==1827==    by 0x402B2F: main (test-eval.c:116)
==1827== 
==1827== Invalid read of size 8
==1827==    at 0x400C02: print_hand (deck.c:19)
==1827==    by 0x40294F: describe_hand (test-eval.c:74)
==1827==    by 0x402B2F: main (test-eval.c:116)
==1827==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1827== 
==1827== 
==1827== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1827==  Access not within mapped region at address 0x0
==1827==    at 0x400C02: print_hand (deck.c:19)
==1827==    by 0x40294F: describe_hand (test-eval.c:74)
==1827==    by 0x402B2F: main (test-eval.c:116)
==1827==  If you believe this happened as a result of a stack
==1827==  overflow in your program's main thread (unlikely but
==1827==  possible), you can try to increase the size of the
==1827==  main thread stack using the --main-stacksize= flag.
==1827==  The main thread stack size used in this run was 8388608.
==1827== 
==1827== HEAP SUMMARY:
==1827==     in use at exit: 896 bytes in 18 blocks
==1827==   total heap usage: 32 allocs, 14 frees, 9,376 bytes allocated
==1827== 
==1827== LEAK SUMMARY:
==1827==    definitely lost: 0 bytes in 0 blocks
==1827==    indirectly lost: 0 bytes in 0 blocks
==1827==      possibly lost: 0 bytes in 0 blocks
==1827==    still reachable: 896 bytes in 18 blocks
==1827==         suppressed: 0 bytes in 0 blocks
==1827== Rerun with --leak-check=full to see details of leaked memory
==1827== 
==1827== For counts of detected and suppressed errors, rerun with: -v
==1827== Use --track-origins=yes to see where uninitialised values come from
==1827== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testcase 9: Trying hands with straight flushes
 Checking the output 
Line_13_did_not_match
Line_14_did_not_match
Line_17_did_not_match
Line_21_did_not_match
Line_31_did_not_match
Line_35_did_not_match
Line_36_did_not_match
Line_39_did_not_match
Line_40_did_not_match
Line_43_did_not_match
Line_50_did_not_match
Line_53_did_not_match
Line_58_did_not_match
Line_59_did_not_match
Line_62_did_not_match
Line_66_did_not_match
Line_71_did_not_match
Line_72_did_not_match
Your file did not match the expected ouput
 - Output did not match, testcase failed
Hand 1:								Hand 1:
--------							--------
As Ks Qs Js 0s 							As Ks Qs Js 0s 
 - Flush in suit s						 - Flush in suit s
 - Straight flush at index 0					 - Straight flush at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: As Ks Qs Js 0s 			 - 5 cards used for hand: As Ks Qs Js 0s 
Hand 2:								Hand 2:
--------							--------
Kh Qh Jh 0h 9h 							Kh Qh Jh 0h 9h 
 - Flush in suit h					      |	 - No flush
 - Straight flush at index 0				      |	 - Straight at index 0
 - The most of a kind is 1 of a kind (at index 0 / value K)	 - The most of a kind is 1 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH		      |	 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: Kh Qh Jh 0h 9h 			 - 5 cards used for hand: Kh Qh Jh 0h 9h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!						      |	Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
As Ks Qs Js 0s 9s 8s 						As Ks Qs Js 0s 9s 8s 
 - Flush in suit s						 - Flush in suit s
 - Straight flush at index 0				      <
 - Straight flush at index 1				      <
 - Straight flush at index 2					 - Straight flush at index 2
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: As Ks Qs Js 0s 		      |	 - 5 cards used for hand: Qs Js 0s 9s 8s 
Hand 2:								Hand 2:
--------							--------
Kh Qh Jh 0h 9h 8h 7h 						Kh Qh Jh 0h 9h 8h 7h 
 - Flush in suit h					      |	 - No flush
 - Straight flush at index 0				      |	 - Straight at index 2
 - Straight flush at index 1				      <
 - Straight flush at index 2				      <
 - The most of a kind is 1 of a kind (at index 0 / value K)	 - The most of a kind is 1 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH		      |	 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: Kh Qh Jh 0h 9h 		      |	 - 5 cards used for hand: Jh 0h 9h 8h 7h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!						      |	Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ac As Kc Ks Qs Js 0s 						Ac As Kc Ks Qs Js 0s 
 - Flush in suit s						 - Flush in suit s
 - Straight at index 0						 - Straight at index 0
 - Straight flush at index 1				      |	 - Straight at index 1
 - The most of a kind is 2 of a kind (at index 0 / value A)	 - The most of a kind is 2 of a kind (at index 0 / value A)
 - Secondary pair at index 2 (value K)				 - Secondary pair at index 2 (value K)
 - evaluate_hand's ranking: STRAIGHT_FLUSH		      |	 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: As Ks Qs Js 0s 			 - 5 cards used for hand: As Ks Qs Js 0s 
Hand 2:								Hand 2:
--------							--------
Ad Kh Qh Jh Js 0h 9h 						Ad Kh Qh Jh Js 0h 9h 
 - Flush in suit h					      |	 - No flush
 - Straight at index 0					      |	 - Straight at index 1
 - Straight flush at index 1				      <
 - The most of a kind is 2 of a kind (at index 3 / value J)	 - The most of a kind is 2 of a kind (at index 3 / value J)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH		      |	 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: Kh Qh Jh 0h 9h 			 - 5 cards used for hand: Kh Qh Jh 0h 9h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!						      |	Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ah Kc 5h 4h 3h 2h 						Ah Kc 5h 4h 3h 2h 
 - Flush in suit h					      |	 - No flush
 - Straight flush at index 0				      |	 - Straight at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: STRAIGHT_FLUSH		      <
 - 5 cards used for hand: 5h 4h 3h 2h Ah 		      <
Hand 2:							      <
--------						      <
Ac 6c 5c 4c 3c 2c 					      <
 - Flush in suit c					      <
 - Straight flush at index 0				      <
 - Straight flush at index 1				      <
 - The most of a kind is 1 of a kind (at index 0 / value A)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: STRAIGHT_FLUSH		      <
 - 5 cards used for hand: 5c 4c 3c 2c Ac 		      <
Comparison : 						      <
--------------						      <
Tie							      <
============================				      <
Hand 1:							      <
--------						      <
As Ks Qs Js 0s 						      <
 - Flush in suit s					      <
 - Straight flush at index 0				      <
 - The most of a kind is 1 of a kind (at index 0 / value A)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: STRAIGHT_FLUSH		      <
 - 5 cards used for hand: As Ks Qs Js 0s 		      <
Hand 2:							      <
--------						      <
As 5s 4s 3s 2s 						      <
 - Flush in suit s					      <
 - Straight flush at index 0				      <
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH		      <
 - 5 cards used for hand: 5s 4s 3s 2s As 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Testcase 10: Trying each type of hand ranking
Valgrind returned an error status
==1845== Memcheck, a memory error detector
==1845== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1845== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1845== Command: ./test-eval inp.10.txt
==1845== Parent PID: 1844
==1845== 
==1845== Use of uninitialised value of size 8
==1845==    at 0x400C02: print_hand (deck.c:19)
==1845==    by 0x40294F: describe_hand (test-eval.c:74)
==1845==    by 0x402B4F: main (test-eval.c:119)
==1845== 
==1845== Invalid read of size 8
==1845==    at 0x400C02: print_hand (deck.c:19)
==1845==    by 0x40294F: describe_hand (test-eval.c:74)
==1845==    by 0x402B4F: main (test-eval.c:119)
==1845==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1845== 
==1845== 
==1845== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1845==  Access not within mapped region at address 0x0
==1845==    at 0x400C02: print_hand (deck.c:19)
==1845==    by 0x40294F: describe_hand (test-eval.c:74)
==1845==    by 0x402B4F: main (test-eval.c:119)
==1845==  If you believe this happened as a result of a stack
==1845==  overflow in your program's main thread (unlikely but
==1845==  possible), you can try to increase the size of the
==1845==  main thread stack using the --main-stacksize= flag.
==1845==  The main thread stack size used in this run was 8388608.
==1845== 
==1845== HEAP SUMMARY:
==1845==     in use at exit: 896 bytes in 18 blocks
==1845==   total heap usage: 34 allocs, 16 frees, 9,424 bytes allocated
==1845== 
==1845== LEAK SUMMARY:
==1845==    definitely lost: 0 bytes in 0 blocks
==1845==    indirectly lost: 0 bytes in 0 blocks
==1845==      possibly lost: 0 bytes in 0 blocks
==1845==    still reachable: 896 bytes in 18 blocks
==1845==         suppressed: 0 bytes in 0 blocks
==1845== Rerun with --leak-check=full to see details of leaked memory
==1845== 
==1845== For counts of detected and suppressed errors, rerun with: -v
==1845== Use --track-origins=yes to see where uninitialised values come from
==1845== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

Overall Grade: F
