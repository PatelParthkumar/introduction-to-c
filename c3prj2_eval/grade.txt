Grading at Fri Dec 27 05:42:40 UTC 2019
Compiling your code
rm -f test poker cards.o my-test-main.o *~
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o deck.o deck.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o eval.o eval.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o cards.o cards.c
gcc -o test-eval -ggdb3 deck.o deck-c4.o eval-c4.o eval.o test-eval.o cards.o input.o future.o
Testcase 1: Trying hands with nothing
Valgrind returned an error status
==2311== Memcheck, a memory error detector
==2311== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2311== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2311== Command: ./test-eval inp.1.txt
==2311== Parent PID: 2310
==2311== 
==2311== Use of uninitialised value of size 8
==2311==    at 0x400C02: print_hand (deck.c:19)
==2311==    by 0x402942: describe_hand (test-eval.c:74)
==2311==    by 0x402B22: main (test-eval.c:116)
==2311== 
==2311== Invalid read of size 8
==2311==    at 0x400C02: print_hand (deck.c:19)
==2311==    by 0x402942: describe_hand (test-eval.c:74)
==2311==    by 0x402B22: main (test-eval.c:116)
==2311==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==2311== 
==2311== 
==2311== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2311==  Access not within mapped region at address 0x0
==2311==    at 0x400C02: print_hand (deck.c:19)
==2311==    by 0x402942: describe_hand (test-eval.c:74)
==2311==    by 0x402B22: main (test-eval.c:116)
==2311==  If you believe this happened as a result of a stack
==2311==  overflow in your program's main thread (unlikely but
==2311==  possible), you can try to increase the size of the
==2311==  main thread stack using the --main-stacksize= flag.
==2311==  The main thread stack size used in this run was 8388608.
==2311== 
==2311== HEAP SUMMARY:
==2311==     in use at exit: 896 bytes in 18 blocks
==2311==   total heap usage: 32 allocs, 14 frees, 9,376 bytes allocated
==2311== 
==2311== LEAK SUMMARY:
==2311==    definitely lost: 0 bytes in 0 blocks
==2311==    indirectly lost: 0 bytes in 0 blocks
==2311==      possibly lost: 0 bytes in 0 blocks
==2311==    still reachable: 896 bytes in 18 blocks
==2311==         suppressed: 0 bytes in 0 blocks
==2311== Rerun with --leak-check=full to see details of leaked memory
==2311== 
==2311== For counts of detected and suppressed errors, rerun with: -v
==2311== Use --track-origins=yes to see where uninitialised values come from
==2311== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testcase 2: Trying hands with pairs
Valgrind returned an error status
==2316== Memcheck, a memory error detector
==2316== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2316== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2316== Command: ./test-eval inp.2.txt
==2316== Parent PID: 2315
==2316== 
==2316== Use of uninitialised value of size 8
==2316==    at 0x400C02: print_hand (deck.c:19)
==2316==    by 0x402942: describe_hand (test-eval.c:74)
==2316==    by 0x402B22: main (test-eval.c:116)
==2316== 
==2316== Invalid read of size 8
==2316==    at 0x400C02: print_hand (deck.c:19)
==2316==    by 0x402942: describe_hand (test-eval.c:74)
==2316==    by 0x402B22: main (test-eval.c:116)
==2316==  Address 0x5206c70 is 0 bytes inside a block of size 24 free'd
==2316==    at 0x4C2EDEB: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==2316==    by 0x40213C: evaluate_hand (eval.c:525)
==2316==    by 0x4028F7: describe_hand (test-eval.c:68)
==2316==    by 0x402B22: main (test-eval.c:116)
==2316==  Block was alloc'd at
==2316==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==2316==    by 0x4013DE: get_match_counts (eval-c4.c:70)
==2316==    by 0x4020BA: evaluate_hand (eval.c:520)
==2316==    by 0x4028F7: describe_hand (test-eval.c:68)
==2316==    by 0x402B22: main (test-eval.c:116)
==2316== 
==2316== 
==2316== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2316==  Access not within mapped region at address 0x0
==2316==    at 0x400C02: print_hand (deck.c:19)
==2316==    by 0x402942: describe_hand (test-eval.c:74)
==2316==    by 0x402B22: main (test-eval.c:116)
==2316==  If you believe this happened as a result of a stack
==2316==  overflow in your program's main thread (unlikely but
==2316==  possible), you can try to increase the size of the
==2316==  main thread stack using the --main-stacksize= flag.
==2316==  The main thread stack size used in this run was 8388608.
==2316== 
==2316== HEAP SUMMARY:
==2316==     in use at exit: 880 bytes in 17 blocks
==2316==   total heap usage: 30 allocs, 13 frees, 9,320 bytes allocated
==2316== 
==2316== LEAK SUMMARY:
==2316==    definitely lost: 0 bytes in 0 blocks
==2316==    indirectly lost: 0 bytes in 0 blocks
==2316==      possibly lost: 0 bytes in 0 blocks
==2316==    still reachable: 880 bytes in 17 blocks
==2316==         suppressed: 0 bytes in 0 blocks
==2316== Rerun with --leak-check=full to see details of leaked memory
==2316== 
==2316== For counts of detected and suppressed errors, rerun with: -v
==2316== Use --track-origins=yes to see where uninitialised values come from
==2316== ERROR SUMMARY: 4 errors from 2 contexts (suppressed: 0 from 0)
Testcase 3: Trying hands with 2 pairs
 Checking the output 
Line_88_did_not_match
Line_96_did_not_match
Line_99_did_not_match
Line_108_did_not_match
Line_116_did_not_match
Your file did not match the expected ouput
 - Output did not match, testcase failed
Hand 1:								Hand 1:
--------							--------
Ac As Kc Kh 4d 							Ac As Kc Kh 4d 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value A)	 - The most of a kind is 2 of a kind (at index 0 / value A)
 - Secondary pair at index 2 (value K)				 - Secondary pair at index 2 (value K)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Ac As Kc Kh 4d 			 - 5 cards used for hand: Ac As Kc Kh 4d 
Hand 2:								Hand 2:
--------							--------
Ad Ah Kd Ks 3h 							Ad Ah Kd Ks 3h 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value A)	 - The most of a kind is 2 of a kind (at index 0 / value A)
 - Secondary pair at index 2 (value K)				 - Secondary pair at index 2 (value K)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Ad Ah Kd Ks 3h 			 - 5 cards used for hand: Ad Ah Kd Ks 3h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ac As Kc Kh 4d 							Ac As Kc Kh 4d 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value A)	 - The most of a kind is 2 of a kind (at index 0 / value A)
 - Secondary pair at index 2 (value K)				 - Secondary pair at index 2 (value K)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Ac As Kc Kh 4d 			 - 5 cards used for hand: Ac As Kc Kh 4d 
Hand 2:								Hand 2:
--------							--------
Ad Ah Qd Qs 3h 							Ad Ah Qd Qs 3h 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value A)	 - The most of a kind is 2 of a kind (at index 0 / value A)
 - Secondary pair at index 2 (value Q)				 - Secondary pair at index 2 (value Q)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Ad Ah Qd Qs 3h 			 - 5 cards used for hand: Ad Ah Qd Qs 3h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Kc Ks Qc Qh 4d 							Kc Ks Qc Qh 4d 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value K)	 - The most of a kind is 2 of a kind (at index 0 / value K)
 - Secondary pair at index 2 (value Q)				 - Secondary pair at index 2 (value Q)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Kc Ks Qc Qh 4d 			 - 5 cards used for hand: Kc Ks Qc Qh 4d 
Hand 2:								Hand 2:
--------							--------
Ad Ah Jd Js 3h 							Ad Ah Jd Js 3h 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value A)	 - The most of a kind is 2 of a kind (at index 0 / value A)
 - Secondary pair at index 2 (value J)				 - Secondary pair at index 2 (value J)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Ad Ah Jd Js 3h 			 - 5 cards used for hand: Ad Ah Jd Js 3h 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Kc Ks Qc Qh 4d 							Kc Ks Qc Qh 4d 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value K)	 - The most of a kind is 2 of a kind (at index 0 / value K)
 - Secondary pair at index 2 (value Q)				 - Secondary pair at index 2 (value Q)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Kc Ks Qc Qh 4d 			 - 5 cards used for hand: Kc Ks Qc Qh 4d 
Hand 2:								Hand 2:
--------							--------
Ad Ah Qd Qs 3h 							Ad Ah Qd Qs 3h 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value A)	 - The most of a kind is 2 of a kind (at index 0 / value A)
 - Secondary pair at index 2 (value Q)				 - Secondary pair at index 2 (value Q)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Ad Ah Qd Qs 3h 			 - 5 cards used for hand: Ad Ah Qd Qs 3h 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Js 7c 7h 4s 3d 3h 						Js 7c 7h 4s 3d 3h 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 1 / value 7)	 - The most of a kind is 2 of a kind (at index 1 / value 7)
 - Secondary pair at index 4 (value 3)				 - Secondary pair at index 4 (value 3)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: 7c 7h 3d 3h Js 		      |	 - 5 cards used for hand: 7c 4s 3d 3h Js 
Hand 2:								Hand 2:
--------							--------
Qs 7d 7s 5c 2d 2h 						Qs 7d 7s 5c 2d 2h 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 1 / value 7)	 - The most of a kind is 2 of a kind (at index 1 / value 7)
 - Secondary pair at index 4 (value 2)				 - Secondary pair at index 4 (value 2)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: 7d 7s 2d 2h Qs 		      |	 - 5 cards used for hand: 7d 5c 2d 2h Qs 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!						      |	Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Js 7c 7h 4s 3d 3h 						Js 7c 7h 4s 3d 3h 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 1 / value 7)	 - The most of a kind is 2 of a kind (at index 1 / value 7)
 - Secondary pair at index 4 (value 3)				 - Secondary pair at index 4 (value 3)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: 7c 7h 3d 3h Js 		      |	 - 5 cards used for hand: 7c 4s 3d 3h Js 
Hand 2:								Hand 2:
--------							--------
Qs 8d 8s 5c 2d 2h 						Qs 8d 8s 5c 2d 2h 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 1 / value 8)	 - The most of a kind is 2 of a kind (at index 1 / value 8)
 - Secondary pair at index 4 (value 2)				 - Secondary pair at index 4 (value 2)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: 8d 8s 2d 2h Qs 		      |	 - 5 cards used for hand: 8d 5c 2d 2h Qs 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Jc Js 9d 5c 5s 4h 						Jc Js 9d 5c 5s 4h 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value J)	 - The most of a kind is 2 of a kind (at index 0 / value J)
 - Secondary pair at index 3 (value 5)				 - Secondary pair at index 3 (value 5)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Jc Js 5c 5s 9d 			 - 5 cards used for hand: Jc Js 5c 5s 9d 
Hand 2:								Hand 2:
--------							--------
Jc Js 9d 4c 4s 3h 						Jc Js 9d 4c 4s 3h 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value J)	 - The most of a kind is 2 of a kind (at index 0 / value J)
 - Secondary pair at index 3 (value 4)				 - Secondary pair at index 3 (value 4)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Jc Js 4c 4s 9d 			 - 5 cards used for hand: Jc Js 4c 4s 9d 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Jc Js 9d 5c 5s 4h 						Jc Js 9d 5c 5s 4h 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value J)	 - The most of a kind is 2 of a kind (at index 0 / value J)
 - Secondary pair at index 3 (value 5)				 - Secondary pair at index 3 (value 5)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Jc Js 5c 5s 9d 			 - 5 cards used for hand: Jc Js 5c 5s 9d 
Hand 2:								Hand 2:
--------							--------
Qc Qs 9d 5c 5s 3h 						Qc Qs 9d 5c 5s 3h 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value Q)	 - The most of a kind is 2 of a kind (at index 0 / value Q)
 - Secondary pair at index 3 (value 5)				 - Secondary pair at index 3 (value 5)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Qc Qs 5c 5s 9d 			 - 5 cards used for hand: Qc Qs 5c 5s 9d 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Jc Js 9d 5c 5s 4h 						Jc Js 9d 5c 5s 4h 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value J)	 - The most of a kind is 2 of a kind (at index 0 / value J)
 - Secondary pair at index 3 (value 5)				 - Secondary pair at index 3 (value 5)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Jc Js 5c 5s 9d 			 - 5 cards used for hand: Jc Js 5c 5s 9d 
Hand 2:								Hand 2:
--------							--------
Jc Js 8d 5c 5s 3h 						Jc Js 8d 5c 5s 3h 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value J)	 - The most of a kind is 2 of a kind (at index 0 / value J)
 - Secondary pair at index 3 (value 5)				 - Secondary pair at index 3 (value 5)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Jc Js 5c 5s 8d 			 - 5 cards used for hand: Jc Js 5c 5s 8d 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ac As Kc Kh 4d 							Ac As Kc Kh 4d 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value A)	 - The most of a kind is 2 of a kind (at index 0 / value A)
 - Secondary pair at index 2 (value K)				 - Secondary pair at index 2 (value K)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Ac As Kc Kh 4d 			 - 5 cards used for hand: Ac As Kc Kh 4d 
Hand 2:								Hand 2:
--------							--------
Jc Js 8d 5c 5s 							Jc Js 8d 5c 5s 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value J)	 - The most of a kind is 2 of a kind (at index 0 / value J)
 - Secondary pair at index 3 (value 5)				 - Secondary pair at index 3 (value 5)
 - evaluate_hand's ranking: TWO_PAIR				 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Jc Js 5c 5s 8d 			 - 5 cards used for hand: Jc Js 5c 5s 8d 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Testcase 4: Trying hands with 3 of a kind
Valgrind returned an error status
==2334== Memcheck, a memory error detector
==2334== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2334== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2334== Command: ./test-eval inp.4.txt
==2334== Parent PID: 2333
==2334== 
==2334== Use of uninitialised value of size 8
==2334==    at 0x400C02: print_hand (deck.c:19)
==2334==    by 0x402942: describe_hand (test-eval.c:74)
==2334==    by 0x402B22: main (test-eval.c:116)
==2334== 
==2334== Invalid read of size 8
==2334==    at 0x400C02: print_hand (deck.c:19)
==2334==    by 0x402942: describe_hand (test-eval.c:74)
==2334==    by 0x402B22: main (test-eval.c:116)
==2334==  Address 0x5206d30 is 0 bytes inside a block of size 24 free'd
==2334==    at 0x4C2EDEB: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==2334==    by 0x40213C: evaluate_hand (eval.c:525)
==2334==    by 0x4028F7: describe_hand (test-eval.c:68)
==2334==    by 0x402B22: main (test-eval.c:116)
==2334==  Block was alloc'd at
==2334==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==2334==    by 0x4013DE: get_match_counts (eval-c4.c:70)
==2334==    by 0x4020BA: evaluate_hand (eval.c:520)
==2334==    by 0x4028F7: describe_hand (test-eval.c:68)
==2334==    by 0x402B22: main (test-eval.c:116)
==2334== 
==2334== 
==2334== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2334==  Access not within mapped region at address 0x0
==2334==    at 0x400C02: print_hand (deck.c:19)
==2334==    by 0x402942: describe_hand (test-eval.c:74)
==2334==    by 0x402B22: main (test-eval.c:116)
==2334==  If you believe this happened as a result of a stack
==2334==  overflow in your program's main thread (unlikely but
==2334==  possible), you can try to increase the size of the
==2334==  main thread stack using the --main-stacksize= flag.
==2334==  The main thread stack size used in this run was 8388608.
==2334== 
==2334== HEAP SUMMARY:
==2334==     in use at exit: 896 bytes in 18 blocks
==2334==   total heap usage: 32 allocs, 14 frees, 9,376 bytes allocated
==2334== 
==2334== LEAK SUMMARY:
==2334==    definitely lost: 0 bytes in 0 blocks
==2334==    indirectly lost: 0 bytes in 0 blocks
==2334==      possibly lost: 0 bytes in 0 blocks
==2334==    still reachable: 896 bytes in 18 blocks
==2334==         suppressed: 0 bytes in 0 blocks
==2334== Rerun with --leak-check=full to see details of leaked memory
==2334== 
==2334== For counts of detected and suppressed errors, rerun with: -v
==2334== Use --track-origins=yes to see where uninitialised values come from
==2334== ERROR SUMMARY: 4 errors from 2 contexts (suppressed: 0 from 0)
Testcase 5: Trying hands with straights
 Checking the output 
Line_27_did_not_match
Line_30_did_not_match
Your file did not match the expected ouput
 - Output did not match, testcase failed
Hand 1:								Hand 1:
--------							--------
0s 9s 8c 7h 6d 							0s 9s 8c 7h 6d 
 - No flush							 - No flush
 - Straight at index 0						 - Straight at index 0
 - The most of a kind is 1 of a kind (at index 0 / value 0)	 - The most of a kind is 1 of a kind (at index 0 / value 0)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT				 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: 0s 9s 8c 7h 6d 			 - 5 cards used for hand: 0s 9s 8c 7h 6d 
Hand 2:								Hand 2:
--------							--------
Js 0c 9s 8d 7c 							Js 0c 9s 8d 7c 
 - No flush							 - No flush
 - Straight at index 0						 - Straight at index 0
 - The most of a kind is 1 of a kind (at index 0 / value J)	 - The most of a kind is 1 of a kind (at index 0 / value J)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT				 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: Js 0c 9s 8d 7c 			 - 5 cards used for hand: Js 0c 9s 8d 7c 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
As 5c 4h 3s 2c 							As 5c 4h 3s 2c 
 - No flush							 - No flush
 - Straight at index 0					      |	Trying for an ace-low straight - Straight at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT			      /	Trying for an ace-low straight
 - 5 cards used for hand: 5c 4h 3s 2c As 		      <
Hand 2:							      <
--------						      <
6c 5h 4s 3s 2d 						      <
 - No flush						      <
 - Straight at index 0					      <
 - The most of a kind is 1 of a kind (at index 0 / value 6)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: STRAIGHT			      <
 - 5 cards used for hand: 6c 5h 4s 3s 2d 		      <
Comparison : 						      <
--------------						      <
Hand 2 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Qh Qs Jd Js 0c 0s 9d 8c 				      <
 - No flush						      <
 - Straight at index 0					      <
 - Straight at index 1					      <
 - The most of a kind is 2 of a kind (at index 0 / value Q)   <
 - Secondary pair at index 2 (value J)			      <
 - evaluate_hand's ranking: STRAIGHT			      <
 - 5 cards used for hand: Qh Jd 0c 9d 8c 		      <
Hand 2:							      <
--------						      <
Kc Qh Qs Jd Js 0c 0s 9d 				      <
 - No flush						      <
 - Straight at index 0					      <
 - The most of a kind is 2 of a kind (at index 1 / value Q)   <
 - Secondary pair at index 3 (value J)			      <
 - evaluate_hand's ranking: STRAIGHT			      <
 - 5 cards used for hand: Kc Qh Jd 0c 9d 		      <
Comparison : 						      <
--------------						      <
Hand 2 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
As Jd 9h 8c 7d 6c 5d 					      <
 - No flush						      <
 - Straight at index 2					      <
 - The most of a kind is 1 of a kind (at index 0 / value A)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: STRAIGHT			      <
 - 5 cards used for hand: 9h 8c 7d 6c 5d 		      <
Hand 2:							      <
--------						      <
Kc Qh 8c 7h 6c 5d 4s 					      <
 - No flush						      <
 - Straight at index 2					      <
 - The most of a kind is 1 of a kind (at index 0 / value K)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: STRAIGHT			      <
 - 5 cards used for hand: 8c 7h 6c 5d 4s 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
As Kd Qs Jd 0s 						      <
 - No flush						      <
 - Straight at index 0					      <
 - The most of a kind is 1 of a kind (at index 0 / value A)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: STRAIGHT			      <
 - 5 cards used for hand: As Kd Qs Jd 0s 		      <
Hand 2:							      <
--------						      <
Ac 5s 4c 3s 2s 						      <
 - No flush						      <
 - Straight at index 0					      <
 - The most of a kind is 1 of a kind (at index 0 / value A)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: STRAIGHT			      <
 - 5 cards used for hand: 5s 4c 3s 2s Ac 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Jh 0s 9c 8s 7c 4c 3d 					      <
 - No flush						      <
 - Straight at index 0					      <
 - The most of a kind is 1 of a kind (at index 0 / value J)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: STRAIGHT			      <
 - 5 cards used for hand: Jh 0s 9c 8s 7c 		      <
Hand 2:							      <
--------						      <
Jh 0s 9c 8s 7c 6c 5d 					      <
 - No flush						      <
 - Straight at index 0					      <
 - Straight at index 1					      <
 - Straight at index 2					      <
 - The most of a kind is 1 of a kind (at index 0 / value J)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: STRAIGHT			      <
 - 5 cards used for hand: Jh 0s 9c 8s 7c 		      <
Comparison : 						      <
--------------						      <
Tie							      <
============================				      <
Testcase 6: Trying hands with flushes
Valgrind returned an error status
==2352== Memcheck, a memory error detector
==2352== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2352== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2352== Command: ./test-eval inp.6.txt
==2352== Parent PID: 2351
==2352== 
==2352== Use of uninitialised value of size 8
==2352==    at 0x400C02: print_hand (deck.c:19)
==2352==    by 0x402942: describe_hand (test-eval.c:74)
==2352==    by 0x402B22: main (test-eval.c:116)
==2352== 
==2352== Invalid read of size 8
==2352==    at 0x400C02: print_hand (deck.c:19)
==2352==    by 0x402942: describe_hand (test-eval.c:74)
==2352==    by 0x402B22: main (test-eval.c:116)
==2352==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==2352== 
==2352== 
==2352== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2352==  Access not within mapped region at address 0x0
==2352==    at 0x400C02: print_hand (deck.c:19)
==2352==    by 0x402942: describe_hand (test-eval.c:74)
==2352==    by 0x402B22: main (test-eval.c:116)
==2352==  If you believe this happened as a result of a stack
==2352==  overflow in your program's main thread (unlikely but
==2352==  possible), you can try to increase the size of the
==2352==  main thread stack using the --main-stacksize= flag.
==2352==  The main thread stack size used in this run was 8388608.
==2352== 
==2352== HEAP SUMMARY:
==2352==     in use at exit: 896 bytes in 18 blocks
==2352==   total heap usage: 90 allocs, 72 frees, 10,448 bytes allocated
==2352== 
==2352== LEAK SUMMARY:
==2352==    definitely lost: 0 bytes in 0 blocks
==2352==    indirectly lost: 0 bytes in 0 blocks
==2352==      possibly lost: 0 bytes in 0 blocks
==2352==    still reachable: 896 bytes in 18 blocks
==2352==         suppressed: 0 bytes in 0 blocks
==2352== Rerun with --leak-check=full to see details of leaked memory
==2352== 
==2352== For counts of detected and suppressed errors, rerun with: -v
==2352== Use --track-origins=yes to see where uninitialised values come from
==2352== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testcase 7: Trying hands with full houses
Valgrind returned an error status
==2357== Memcheck, a memory error detector
==2357== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2357== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2357== Command: ./test-eval inp.7.txt
==2357== Parent PID: 2356
==2357== 
==2357== Use of uninitialised value of size 8
==2357==    at 0x400C02: print_hand (deck.c:19)
==2357==    by 0x402942: describe_hand (test-eval.c:74)
==2357==    by 0x402B22: main (test-eval.c:116)
==2357== 
==2357== Invalid read of size 8
==2357==    at 0x400C02: print_hand (deck.c:19)
==2357==    by 0x402942: describe_hand (test-eval.c:74)
==2357==    by 0x402B22: main (test-eval.c:116)
==2357==  Address 0x380512a0 is in the Text segment of /usr/lib/valgrind/memcheck-amd64-linux
==2357==    at 0x380512A0: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==2357== 
==2357== 
==2357== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2357==  Access not within mapped region at address 0x18
==2357==    at 0x400C02: print_hand (deck.c:19)
==2357==    by 0x402942: describe_hand (test-eval.c:74)
==2357==    by 0x402B22: main (test-eval.c:116)
==2357==  If you believe this happened as a result of a stack
==2357==  overflow in your program's main thread (unlikely but
==2357==  possible), you can try to increase the size of the
==2357==  main thread stack using the --main-stacksize= flag.
==2357==  The main thread stack size used in this run was 8388608.
==2357== 
==2357== HEAP SUMMARY:
==2357==     in use at exit: 912 bytes in 19 blocks
==2357==   total heap usage: 480 allocs, 461 frees, 18,344 bytes allocated
==2357== 
==2357== LEAK SUMMARY:
==2357==    definitely lost: 0 bytes in 0 blocks
==2357==    indirectly lost: 0 bytes in 0 blocks
==2357==      possibly lost: 0 bytes in 0 blocks
==2357==    still reachable: 912 bytes in 19 blocks
==2357==         suppressed: 0 bytes in 0 blocks
==2357== Rerun with --leak-check=full to see details of leaked memory
==2357== 
==2357== For counts of detected and suppressed errors, rerun with: -v
==2357== Use --track-origins=yes to see where uninitialised values come from
==2357== ERROR SUMMARY: 6 errors from 2 contexts (suppressed: 0 from 0)
Testcase 8: Trying hands with 4 of a kind
Valgrind returned an error status
==2362== Memcheck, a memory error detector
==2362== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2362== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2362== Command: ./test-eval inp.8.txt
==2362== Parent PID: 2361
==2362== 
==2362== Use of uninitialised value of size 8
==2362==    at 0x400C02: print_hand (deck.c:19)
==2362==    by 0x402942: describe_hand (test-eval.c:74)
==2362==    by 0x402B22: main (test-eval.c:116)
==2362== 
==2362== Invalid read of size 8
==2362==    at 0x400C02: print_hand (deck.c:19)
==2362==    by 0x402942: describe_hand (test-eval.c:74)
==2362==    by 0x402B22: main (test-eval.c:116)
==2362==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==2362== 
==2362== 
==2362== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2362==  Access not within mapped region at address 0x0
==2362==    at 0x400C02: print_hand (deck.c:19)
==2362==    by 0x402942: describe_hand (test-eval.c:74)
==2362==    by 0x402B22: main (test-eval.c:116)
==2362==  If you believe this happened as a result of a stack
==2362==  overflow in your program's main thread (unlikely but
==2362==  possible), you can try to increase the size of the
==2362==  main thread stack using the --main-stacksize= flag.
==2362==  The main thread stack size used in this run was 8388608.
==2362== 
==2362== HEAP SUMMARY:
==2362==     in use at exit: 896 bytes in 18 blocks
==2362==   total heap usage: 32 allocs, 14 frees, 9,376 bytes allocated
==2362== 
==2362== LEAK SUMMARY:
==2362==    definitely lost: 0 bytes in 0 blocks
==2362==    indirectly lost: 0 bytes in 0 blocks
==2362==      possibly lost: 0 bytes in 0 blocks
==2362==    still reachable: 896 bytes in 18 blocks
==2362==         suppressed: 0 bytes in 0 blocks
==2362== Rerun with --leak-check=full to see details of leaked memory
==2362== 
==2362== For counts of detected and suppressed errors, rerun with: -v
==2362== Use --track-origins=yes to see where uninitialised values come from
==2362== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testcase 9: Trying hands with straight flushes
 Checking the output 
Line_13_did_not_match
Line_14_did_not_match
Line_17_did_not_match
Line_21_did_not_match
Line_31_did_not_match
Line_35_did_not_match
Line_36_did_not_match
Line_39_did_not_match
Line_40_did_not_match
Line_43_did_not_match
Line_50_did_not_match
Line_53_did_not_match
Line_58_did_not_match
Line_59_did_not_match
Line_62_did_not_match
Line_66_did_not_match
Line_71_did_not_match
Line_72_did_not_match
Line_75_did_not_match
Your file did not match the expected ouput
 - Output did not match, testcase failed
Hand 1:								Hand 1:
--------							--------
As Ks Qs Js 0s 							As Ks Qs Js 0s 
 - Flush in suit s						 - Flush in suit s
 - Straight flush at index 0					 - Straight flush at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: As Ks Qs Js 0s 			 - 5 cards used for hand: As Ks Qs Js 0s 
Hand 2:								Hand 2:
--------							--------
Kh Qh Jh 0h 9h 							Kh Qh Jh 0h 9h 
 - Flush in suit h					      |	 - No flush
 - Straight flush at index 0				      |	 - Straight at index 0
 - The most of a kind is 1 of a kind (at index 0 / value K)	 - The most of a kind is 1 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH		      |	 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: Kh Qh Jh 0h 9h 			 - 5 cards used for hand: Kh Qh Jh 0h 9h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!						      |	Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
As Ks Qs Js 0s 9s 8s 						As Ks Qs Js 0s 9s 8s 
 - Flush in suit s						 - Flush in suit s
 - Straight flush at index 0				      <
 - Straight flush at index 1				      <
 - Straight flush at index 2					 - Straight flush at index 2
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: As Ks Qs Js 0s 		      |	 - 5 cards used for hand: Qs Js 0s 9s 8s 
Hand 2:								Hand 2:
--------							--------
Kh Qh Jh 0h 9h 8h 7h 						Kh Qh Jh 0h 9h 8h 7h 
 - Flush in suit h					      |	 - No flush
 - Straight flush at index 0				      |	 - Straight at index 2
 - Straight flush at index 1				      <
 - Straight flush at index 2				      <
 - The most of a kind is 1 of a kind (at index 0 / value K)	 - The most of a kind is 1 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH		      |	 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: Kh Qh Jh 0h 9h 		      |	 - 5 cards used for hand: Jh 0h 9h 8h 7h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!						      |	Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ac As Kc Ks Qs Js 0s 						Ac As Kc Ks Qs Js 0s 
 - Flush in suit s						 - Flush in suit s
 - Straight at index 0						 - Straight at index 0
 - Straight flush at index 1				      |	 - Straight at index 1
 - The most of a kind is 2 of a kind (at index 0 / value A)	 - The most of a kind is 2 of a kind (at index 0 / value A)
 - Secondary pair at index 2 (value K)				 - Secondary pair at index 2 (value K)
 - evaluate_hand's ranking: STRAIGHT_FLUSH		      |	 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: As Ks Qs Js 0s 			 - 5 cards used for hand: As Ks Qs Js 0s 
Hand 2:								Hand 2:
--------							--------
Ad Kh Qh Jh Js 0h 9h 						Ad Kh Qh Jh Js 0h 9h 
 - Flush in suit h					      |	 - No flush
 - Straight at index 0					      |	 - Straight at index 1
 - Straight flush at index 1				      <
 - The most of a kind is 2 of a kind (at index 3 / value J)	 - The most of a kind is 2 of a kind (at index 3 / value J)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH		      |	 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: Kh Qh Jh 0h 9h 			 - 5 cards used for hand: Kh Qh Jh 0h 9h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!						      |	Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ah Kc 5h 4h 3h 2h 						Ah Kc 5h 4h 3h 2h 
 - Flush in suit h					      |	 - No flush
 - Straight flush at index 0				      |	Trying for an ace-low straight - Straight at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: STRAIGHT_FLUSH		      <
 - 5 cards used for hand: 5h 4h 3h 2h Ah 		      <
Hand 2:							      <
--------						      <
Ac 6c 5c 4c 3c 2c 					      <
 - Flush in suit c					      <
 - Straight flush at index 0				      <
 - Straight flush at index 1				      <
 - The most of a kind is 1 of a kind (at index 0 / value A)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: STRAIGHT_FLUSH		      <
 - 5 cards used for hand: 5c 4c 3c 2c Ac 		      <
Comparison : 						      <
--------------						      <
Tie							      <
============================				      <
Hand 1:							      <
--------						      <
As Ks Qs Js 0s 						      <
 - Flush in suit s					      <
 - Straight flush at index 0				      <
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH		      /	Trying for an ace-low straight
 - 5 cards used for hand: As Ks Qs Js 0s 		      <
Hand 2:							      <
--------						      <
As 5s 4s 3s 2s 						      <
 - Flush in suit s					      <
 - Straight flush at index 0				      <
 - The most of a kind is 1 of a kind (at index 0 / value A)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: STRAIGHT_FLUSH		      <
 - 5 cards used for hand: 5s 4s 3s 2s As 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Testcase 10: Trying each type of hand ranking
Valgrind returned an error status
==2380== Memcheck, a memory error detector
==2380== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2380== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2380== Command: ./test-eval inp.10.txt
==2380== Parent PID: 2379
==2380== 
==2380== Use of uninitialised value of size 8
==2380==    at 0x400C02: print_hand (deck.c:19)
==2380==    by 0x402942: describe_hand (test-eval.c:74)
==2380==    by 0x402B42: main (test-eval.c:119)
==2380== 
==2380== Invalid read of size 8
==2380==    at 0x400C02: print_hand (deck.c:19)
==2380==    by 0x402942: describe_hand (test-eval.c:74)
==2380==    by 0x402B42: main (test-eval.c:119)
==2380==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==2380== 
==2380== 
==2380== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2380==  Access not within mapped region at address 0x0
==2380==    at 0x400C02: print_hand (deck.c:19)
==2380==    by 0x402942: describe_hand (test-eval.c:74)
==2380==    by 0x402B42: main (test-eval.c:119)
==2380==  If you believe this happened as a result of a stack
==2380==  overflow in your program's main thread (unlikely but
==2380==  possible), you can try to increase the size of the
==2380==  main thread stack using the --main-stacksize= flag.
==2380==  The main thread stack size used in this run was 8388608.
==2380== 
==2380== HEAP SUMMARY:
==2380==     in use at exit: 896 bytes in 18 blocks
==2380==   total heap usage: 34 allocs, 16 frees, 9,424 bytes allocated
==2380== 
==2380== LEAK SUMMARY:
==2380==    definitely lost: 0 bytes in 0 blocks
==2380==    indirectly lost: 0 bytes in 0 blocks
==2380==      possibly lost: 0 bytes in 0 blocks
==2380==    still reachable: 896 bytes in 18 blocks
==2380==         suppressed: 0 bytes in 0 blocks
==2380== Rerun with --leak-check=full to see details of leaked memory
==2380== 
==2380== For counts of detected and suppressed errors, rerun with: -v
==2380== Use --track-origins=yes to see where uninitialised values come from
==2380== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

Overall Grade: F
