Grading at Sat Mar  7 20:10:02 UTC 2020
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Your file matched the expected output
Test case passed
Testing with input file with 
 o Many hands
 o No unknown/future cards
Your file matched the expected output
Test case passed
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==1638== Memcheck, a memory error detector
==1638== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1638== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1638== Command: ./tester h.txt d.txt
==1638== Parent PID: 1637
==1638== 
==1638== Use of uninitialised value of size 8
==1638==    at 0x400F46: print_hand (in /graderhome/work/c4prj2_input/tester)
==1638==    by 0x401BF8: main (test-input.c:84)
==1638== 
==1638== Invalid read of size 8
==1638==    at 0x400F46: print_hand (in /graderhome/work/c4prj2_input/tester)
==1638==    by 0x401BF8: main (test-input.c:84)
==1638==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1638== 
==1638== 
==1638== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1638==  Access not within mapped region at address 0x0
==1638==    at 0x400F46: print_hand (in /graderhome/work/c4prj2_input/tester)
==1638==    by 0x401BF8: main (test-input.c:84)
==1638==  If you believe this happened as a result of a stack
==1638==  overflow in your program's main thread (unlikely but
==1638==  possible), you can try to increase the size of the
==1638==  main thread stack using the --main-stacksize= flag.
==1638==  The main thread stack size used in this run was 8388608.
==1638== 
==1638== HEAP SUMMARY:
==1638==     in use at exit: 1,024 bytes in 67 blocks
==1638==   total heap usage: 120 allocs, 53 frees, 15,720 bytes allocated
==1638== 
==1638== LEAK SUMMARY:
==1638==    definitely lost: 0 bytes in 0 blocks
==1638==    indirectly lost: 0 bytes in 0 blocks
==1638==      possibly lost: 0 bytes in 0 blocks
==1638==    still reachable: 1,024 bytes in 67 blocks
==1638==         suppressed: 0 bytes in 0 blocks
==1638== Rerun with --leak-check=full to see details of leaked memory
==1638== 
==1638== For counts of detected and suppressed errors, rerun with: -v
==1638== Use --track-origins=yes to see where uninitialised values come from
==1638== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Line_1_did_not_match
Your file did not match the expected ouput
Test case failed

Overall Grade: C
