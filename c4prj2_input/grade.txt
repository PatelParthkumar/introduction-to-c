Grading at Sat Mar  7 19:30:27 UTC 2020
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Valgrind reported errors:
==1020== Memcheck, a memory error detector
==1020== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1020== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1020== Command: ./tester hands.txt draw.txt
==1020== Parent PID: 1019
==1020== 
==1020== Invalid read of size 8
==1020==    at 0x401B35: main (test-input.c:84)
==1020==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1020== 
==1020== 
==1020== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1020==  Access not within mapped region at address 0x0
==1020==    at 0x401B35: main (test-input.c:84)
==1020==  If you believe this happened as a result of a stack
==1020==  overflow in your program's main thread (unlikely but
==1020==  possible), you can try to increase the size of the
==1020==  main thread stack using the --main-stacksize= flag.
==1020==  The main thread stack size used in this run was 8388608.
==1020== 
==1020== HEAP SUMMARY:
==1020==     in use at exit: 280 bytes in 14 blocks
==1020==   total heap usage: 27 allocs, 13 frees, 15,488 bytes allocated
==1020== 
==1020== LEAK SUMMARY:
==1020==    definitely lost: 144 bytes in 3 blocks
==1020==    indirectly lost: 96 bytes in 7 blocks
==1020==      possibly lost: 0 bytes in 0 blocks
==1020==    still reachable: 40 bytes in 4 blocks
==1020==         suppressed: 0 bytes in 0 blocks
==1020== Rerun with --leak-check=full to see details of leaked memory
==1020== 
==1020== For counts of detected and suppressed errors, rerun with: -v
==1020== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o No unknown/future cards
Valgrind reported errors:
==1025== Memcheck, a memory error detector
==1025== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1025== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1025== Command: ./tester hands.txt draw.txt
==1025== Parent PID: 1024
==1025== 
==1025== Invalid read of size 8
==1025==    at 0x401B35: main (test-input.c:84)
==1025==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1025== 
==1025== 
==1025== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1025==  Access not within mapped region at address 0x0
==1025==    at 0x401B35: main (test-input.c:84)
==1025==  If you believe this happened as a result of a stack
==1025==  overflow in your program's main thread (unlikely but
==1025==  possible), you can try to increase the size of the
==1025==  main thread stack using the --main-stacksize= flag.
==1025==  The main thread stack size used in this run was 8388608.
==1025== 
==1025== HEAP SUMMARY:
==1025==     in use at exit: 280 bytes in 14 blocks
==1025==   total heap usage: 27 allocs, 13 frees, 15,488 bytes allocated
==1025== 
==1025== LEAK SUMMARY:
==1025==    definitely lost: 144 bytes in 3 blocks
==1025==    indirectly lost: 96 bytes in 7 blocks
==1025==      possibly lost: 0 bytes in 0 blocks
==1025==    still reachable: 40 bytes in 4 blocks
==1025==         suppressed: 0 bytes in 0 blocks
==1025== Rerun with --leak-check=full to see details of leaked memory
==1025== 
==1025== For counts of detected and suppressed errors, rerun with: -v
==1025== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==1031== Memcheck, a memory error detector
==1031== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1031== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1031== Command: ./tester h.txt d.txt
==1031== Parent PID: 1030
==1031== 
==1031== Invalid read of size 8
==1031==    at 0x401B35: main (test-input.c:84)
==1031==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1031== 
==1031== 
==1031== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1031==  Access not within mapped region at address 0x0
==1031==    at 0x401B35: main (test-input.c:84)
==1031==  If you believe this happened as a result of a stack
==1031==  overflow in your program's main thread (unlikely but
==1031==  possible), you can try to increase the size of the
==1031==  main thread stack using the --main-stacksize= flag.
==1031==  The main thread stack size used in this run was 8388608.
==1031== 
==1031== HEAP SUMMARY:
==1031==     in use at exit: 592 bytes in 35 blocks
==1031==   total heap usage: 63 allocs, 28 frees, 16,040 bytes allocated
==1031== 
==1031== LEAK SUMMARY:
==1031==    definitely lost: 144 bytes in 3 blocks
==1031==    indirectly lost: 96 bytes in 7 blocks
==1031==      possibly lost: 0 bytes in 0 blocks
==1031==    still reachable: 352 bytes in 25 blocks
==1031==         suppressed: 0 bytes in 0 blocks
==1031== Rerun with --leak-check=full to see details of leaked memory
==1031== 
==1031== For counts of detected and suppressed errors, rerun with: -v
==1031== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==1037== Memcheck, a memory error detector
==1037== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1037== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1037== Command: ./tester i1 i2
==1037== Parent PID: 1036
==1037== 
==1037== Invalid read of size 8
==1037==    at 0x400D13: add_future_card (in /graderhome/work/c4prj2_input/tester)
==1037==    by 0x400B9A: read_input (in /graderhome/work/c4prj2_input/tester)
==1037==    by 0x401A24: main (test-input.c:69)
==1037==  Address 0x308 is not stack'd, malloc'd or (recently) free'd
==1037== 
==1037== 
==1037== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1037==  Access not within mapped region at address 0x308
==1037==    at 0x400D13: add_future_card (in /graderhome/work/c4prj2_input/tester)
==1037==    by 0x400B9A: read_input (in /graderhome/work/c4prj2_input/tester)
==1037==    by 0x401A24: main (test-input.c:69)
==1037==  If you believe this happened as a result of a stack
==1037==  overflow in your program's main thread (unlikely but
==1037==  possible), you can try to increase the size of the
==1037==  main thread stack using the --main-stacksize= flag.
==1037==  The main thread stack size used in this run was 8388608.
==1037== 
==1037== HEAP SUMMARY:
==1037==     in use at exit: 768 bytes in 9 blocks
==1037==   total heap usage: 13 allocs, 4 frees, 4,912 bytes allocated
==1037== 
==1037== LEAK SUMMARY:
==1037==    definitely lost: 0 bytes in 0 blocks
==1037==    indirectly lost: 0 bytes in 0 blocks
==1037==      possibly lost: 0 bytes in 0 blocks
==1037==    still reachable: 768 bytes in 9 blocks
==1037==         suppressed: 0 bytes in 0 blocks
==1037== Rerun with --leak-check=full to see details of leaked memory
==1037== 
==1037== For counts of detected and suppressed errors, rerun with: -v
==1037== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Overall Grade: F
